Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> pddl
Rule 1     pddl -> domain
Rule 2     pddl -> problem
Rule 3     domain -> LPAREN DEFINE_KEY domain_def require_def types_def constants_def predicates_def action_def_lst RPAREN
Rule 4     domain -> LPAREN DEFINE_KEY domain_def require_def types_def predicates_def action_def_lst RPAREN
Rule 5     domain -> LPAREN DEFINE_KEY domain_def require_def predicates_def action_def_lst RPAREN
Rule 6     domain -> LPAREN DEFINE_KEY domain_def predicates_def action_def_lst RPAREN
Rule 7     domain -> LPAREN DEFINE_KEY domain_def action_def_lst RPAREN
Rule 8     problem -> LPAREN DEFINE_KEY problem_def domain_pdef objects_def init_def goal_def RPAREN
Rule 9     domain_pdef -> LPAREN DOMAIN_PKEY NAME RPAREN
Rule 10    domain_def -> LPAREN DOMAIN_KEY NAME RPAREN
Rule 11    problem_def -> LPAREN PROBLEM_KEY NAME RPAREN
Rule 12    objects_def -> LPAREN OBJECTS_KEY typed_constants_lst RPAREN
Rule 13    init_def -> LPAREN INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN
Rule 14    init_def -> LPAREN INIT_KEY ground_predicates_lst RPAREN
Rule 15    goal_def -> LPAREN GOAL_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN
Rule 16    goal_def -> LPAREN GOAL_KEY ground_predicate RPAREN
Rule 17    require_def -> LPAREN REQUIREMENTS_KEY require_key_lst RPAREN
Rule 18    require_key_lst -> require_key require_key_lst
Rule 19    require_key_lst -> require_key
Rule 20    require_key -> STRIPS_KEY
Rule 21    require_key -> EQUALITY_KEY
Rule 22    require_key -> TYPING_KEY
Rule 23    require_key -> ADL_KEY
Rule 24    require_key -> ND_KEY
Rule 25    types_def -> LPAREN TYPES_KEY typed_lst_name RPAREN
Rule 26    constants_def -> LPAREN CONSTANTS_KEY typed_constants_lst RPAREN
Rule 27    constants_def -> LPAREN CONSTANTS_KEY names_lst RPAREN
Rule 28    typed_lst_name -> names_lst
Rule 29    names_lst -> NAME names_lst
Rule 30    names_lst -> NAME
Rule 31    predicates_def -> LPAREN PREDICATES_KEY predicate_def_lst RPAREN
Rule 32    predicate_def_lst -> predicate_def predicate_def_lst
Rule 33    predicate_def_lst -> predicate_def
Rule 34    predicate_def -> LPAREN NAME typed_variables_lst RPAREN
Rule 35    predicate_def -> LPAREN NAME RPAREN
Rule 36    ground_predicates_lst -> ground_predicate ground_predicates_lst
Rule 37    ground_predicates_lst -> ground_predicate
Rule 38    ground_predicate -> LPAREN NAME RPAREN
Rule 39    ground_predicate -> LPAREN NAME constants_lst RPAREN
Rule 40    constants_lst -> constant constants_lst
Rule 41    constants_lst -> constant
Rule 42    typed_constants_lst -> constants_lst HYPHEN type typed_constants_lst
Rule 43    typed_constants_lst -> constants_lst HYPHEN type
Rule 44    action_def_lst -> action_def action_def_lst
Rule 45    action_def_lst -> action_def
Rule 46    action_def -> LPAREN ACTION_KEY NAME parameters_def precond_def effects_def RPAREN
Rule 47    parameters_def -> PARAMETERS_KEY LPAREN typed_variables_lst RPAREN
Rule 48    parameters_def -> PARAMETERS_KEY LPAREN RPAREN
Rule 49    precond_def -> PRECONDITION_KEY LPAREN formula RPAREN
Rule 50    formula -> literal
Rule 51    formula -> AND_KEY formula_lst
Rule 52    formula -> OR_KEY formula_lst
Rule 53    formula -> NOT_KEY formula
Rule 54    formula -> IMPLY_KEY formula formula
Rule 55    formula -> EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
Rule 56    formula -> FORALL_KEY LPAREN typed_variables_lst RPAREN formula
Rule 57    formula -> LPAREN AND_KEY formula_lst RPAREN
Rule 58    formula -> LPAREN OR_KEY formula_lst RPAREN
Rule 59    formula -> LPAREN NOT_KEY formula RPAREN
Rule 60    formula -> LPAREN IMPLY_KEY formula formula RPAREN
Rule 61    formula -> LPAREN literal RPAREN
Rule 62    formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
Rule 63    formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
Rule 64    formula_lst -> formula formula_lst
Rule 65    formula_lst -> formula
Rule 66    effects_def -> EFFECT_KEY LPAREN one_eff_formula RPAREN
Rule 67    one_eff_formula -> literal
Rule 68    one_eff_formula -> AND_KEY
Rule 69    one_eff_formula -> AND_KEY one_eff_formula_lst
Rule 70    one_eff_formula -> ONEOF_KEY atomic_eff_lst
Rule 71    one_eff_formula -> WHEN_KEY formula atomic_eff
Rule 72    one_eff_formula -> LPAREN ONEOF_KEY atomic_eff_lst RPAREN
Rule 73    one_eff_formula -> LPAREN WHEN_KEY formula atomic_eff RPAREN
Rule 74    one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN atomic_eff RPAREN
Rule 75    one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN
Rule 76    one_eff_formula_lst -> one_eff_formula one_eff_formula_lst
Rule 77    one_eff_formula_lst -> one_eff_formula
Rule 78    atomic_eff_lst -> atomic_eff atomic_eff_lst
Rule 79    atomic_eff_lst -> atomic_eff
Rule 80    atomic_eff -> literal
Rule 81    atomic_eff -> AND_KEY literal_lst
Rule 82    atomic_eff -> LPAREN AND_KEY RPAREN
Rule 83    atomic_eff -> LPAREN AND_KEY literal_lst RPAREN
Rule 84    atomic_eff -> LPAREN WHEN_KEY formula atomic_eff RPAREN
Rule 85    literal_lst -> literal literal_lst
Rule 86    literal_lst -> literal
Rule 87    literal -> LPAREN NOT_KEY predicate RPAREN
Rule 88    literal -> predicate
Rule 89    predicate -> LPAREN NAME variables_lst RPAREN
Rule 90    predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN
Rule 91    predicate -> LPAREN NAME RPAREN
Rule 92    predicate -> NAME variables_lst
Rule 93    predicate -> EQUALS VARIABLE VARIABLE
Rule 94    predicate -> NAME
Rule 95    typed_variables_lst -> variables_lst HYPHEN type typed_variables_lst
Rule 96    typed_variables_lst -> variables_lst HYPHEN type
Rule 97    variables_lst -> VARIABLE variables_lst
Rule 98    variables_lst -> VARIABLE
Rule 99    type -> NAME
Rule 100   constant -> NAME

Terminals, with rules where they appear

ACTION_KEY           : 46
ADL_KEY              : 23
AND_KEY              : 13 15 51 57 68 69 81 82 83
CONSTANTS_KEY        : 26 27
DEFINE_KEY           : 3 4 5 6 7 8
DOMAIN_KEY           : 10
DOMAIN_PKEY          : 9
EFFECT_KEY           : 66
EQUALITY_KEY         : 21
EQUALS               : 90 93
EXISTS_KEY           : 55 62
FORALL_KEY           : 56 63 74 75
GOAL_KEY             : 15 16
HYPHEN               : 42 43 95 96
IMPLY_KEY            : 54 60
INIT_KEY             : 13 14
LPAREN               : 3 4 5 6 7 8 9 10 11 12 13 13 14 15 15 16 17 25 26 27 31 34 35 38 39 46 47 48 49 55 56 57 58 59 60 61 62 62 63 63 66 72 73 74 74 75 75 75 82 83 84 87 89 90 91
NAME                 : 9 10 11 29 30 34 35 38 39 46 89 91 92 94 99 100
ND_KEY               : 24
NOT_KEY              : 53 59 87
OBJECTS_KEY          : 12
ONEOF_KEY            : 70 72
OR_KEY               : 52 58
PARAMETERS_KEY       : 47 48
PRECONDITION_KEY     : 49
PREDICATES_KEY       : 31
PROBLEM_KEY          : 11
REQUIREMENTS_KEY     : 17
RPAREN               : 3 4 5 6 7 8 9 10 11 12 13 13 14 15 15 16 17 25 26 27 31 34 35 38 39 46 47 48 49 55 56 57 58 59 60 61 62 62 63 63 66 72 73 74 74 75 75 75 82 83 84 87 89 90 91
STRIPS_KEY           : 20
TYPES_KEY            : 25
TYPING_KEY           : 22
VARIABLE             : 90 90 93 93 97 98
WHEN_KEY             : 71 73 75 84
error                : 

Nonterminals, with rules where they appear

action_def           : 44 45
action_def_lst       : 3 4 5 6 7 44
atomic_eff           : 71 73 74 75 78 79 84
atomic_eff_lst       : 70 72 78
constant             : 40 41
constants_def        : 3
constants_lst        : 39 40 42 43
domain               : 1
domain_def           : 3 4 5 6 7
domain_pdef          : 8
effects_def          : 46
formula              : 49 53 54 54 55 56 59 60 60 62 63 64 65 71 73 75 84
formula_lst          : 51 52 57 58 64
goal_def             : 8
ground_predicate     : 16 36 37
ground_predicates_lst : 13 14 15 36
init_def             : 8
literal              : 50 61 67 80 85 86
literal_lst          : 81 83 85
names_lst            : 27 28 29
objects_def          : 8
one_eff_formula      : 66 76 77
one_eff_formula_lst  : 69 76
parameters_def       : 46
pddl                 : 0
precond_def          : 46
predicate            : 87 88
predicate_def        : 32 33
predicate_def_lst    : 31 32
predicates_def       : 3 4 5 6
problem              : 2
problem_def          : 8
require_def          : 3 4 5
require_key          : 18 19
require_key_lst      : 17 18
type                 : 42 43 95 96
typed_constants_lst  : 12 26 42
typed_lst_name       : 25
typed_variables_lst  : 34 47 55 56 62 63 74 75 95
types_def            : 3 4
variables_lst        : 89 92 95 96 97

Parsing method: LALR

state 0

    (0) S' -> . pddl
    (1) pddl -> . domain
    (2) pddl -> . problem
    (3) domain -> . LPAREN DEFINE_KEY domain_def require_def types_def constants_def predicates_def action_def_lst RPAREN
    (4) domain -> . LPAREN DEFINE_KEY domain_def require_def types_def predicates_def action_def_lst RPAREN
    (5) domain -> . LPAREN DEFINE_KEY domain_def require_def predicates_def action_def_lst RPAREN
    (6) domain -> . LPAREN DEFINE_KEY domain_def predicates_def action_def_lst RPAREN
    (7) domain -> . LPAREN DEFINE_KEY domain_def action_def_lst RPAREN
    (8) problem -> . LPAREN DEFINE_KEY problem_def domain_pdef objects_def init_def goal_def RPAREN

    LPAREN          shift and go to state 4

    pddl                           shift and go to state 1
    domain                         shift and go to state 2
    problem                        shift and go to state 3

state 1

    (0) S' -> pddl .



state 2

    (1) pddl -> domain .

    $end            reduce using rule 1 (pddl -> domain .)


state 3

    (2) pddl -> problem .

    $end            reduce using rule 2 (pddl -> problem .)


state 4

    (3) domain -> LPAREN . DEFINE_KEY domain_def require_def types_def constants_def predicates_def action_def_lst RPAREN
    (4) domain -> LPAREN . DEFINE_KEY domain_def require_def types_def predicates_def action_def_lst RPAREN
    (5) domain -> LPAREN . DEFINE_KEY domain_def require_def predicates_def action_def_lst RPAREN
    (6) domain -> LPAREN . DEFINE_KEY domain_def predicates_def action_def_lst RPAREN
    (7) domain -> LPAREN . DEFINE_KEY domain_def action_def_lst RPAREN
    (8) problem -> LPAREN . DEFINE_KEY problem_def domain_pdef objects_def init_def goal_def RPAREN

    DEFINE_KEY      shift and go to state 5


state 5

    (3) domain -> LPAREN DEFINE_KEY . domain_def require_def types_def constants_def predicates_def action_def_lst RPAREN
    (4) domain -> LPAREN DEFINE_KEY . domain_def require_def types_def predicates_def action_def_lst RPAREN
    (5) domain -> LPAREN DEFINE_KEY . domain_def require_def predicates_def action_def_lst RPAREN
    (6) domain -> LPAREN DEFINE_KEY . domain_def predicates_def action_def_lst RPAREN
    (7) domain -> LPAREN DEFINE_KEY . domain_def action_def_lst RPAREN
    (8) problem -> LPAREN DEFINE_KEY . problem_def domain_pdef objects_def init_def goal_def RPAREN
    (10) domain_def -> . LPAREN DOMAIN_KEY NAME RPAREN
    (11) problem_def -> . LPAREN PROBLEM_KEY NAME RPAREN

    LPAREN          shift and go to state 6

    domain_def                     shift and go to state 7
    problem_def                    shift and go to state 8

state 6

    (10) domain_def -> LPAREN . DOMAIN_KEY NAME RPAREN
    (11) problem_def -> LPAREN . PROBLEM_KEY NAME RPAREN

    DOMAIN_KEY      shift and go to state 9
    PROBLEM_KEY     shift and go to state 10


state 7

    (3) domain -> LPAREN DEFINE_KEY domain_def . require_def types_def constants_def predicates_def action_def_lst RPAREN
    (4) domain -> LPAREN DEFINE_KEY domain_def . require_def types_def predicates_def action_def_lst RPAREN
    (5) domain -> LPAREN DEFINE_KEY domain_def . require_def predicates_def action_def_lst RPAREN
    (6) domain -> LPAREN DEFINE_KEY domain_def . predicates_def action_def_lst RPAREN
    (7) domain -> LPAREN DEFINE_KEY domain_def . action_def_lst RPAREN
    (17) require_def -> . LPAREN REQUIREMENTS_KEY require_key_lst RPAREN
    (31) predicates_def -> . LPAREN PREDICATES_KEY predicate_def_lst RPAREN
    (44) action_def_lst -> . action_def action_def_lst
    (45) action_def_lst -> . action_def
    (46) action_def -> . LPAREN ACTION_KEY NAME parameters_def precond_def effects_def RPAREN

    LPAREN          shift and go to state 11

    require_def                    shift and go to state 12
    predicates_def                 shift and go to state 13
    action_def_lst                 shift and go to state 14
    action_def                     shift and go to state 15

state 8

    (8) problem -> LPAREN DEFINE_KEY problem_def . domain_pdef objects_def init_def goal_def RPAREN
    (9) domain_pdef -> . LPAREN DOMAIN_PKEY NAME RPAREN

    LPAREN          shift and go to state 16

    domain_pdef                    shift and go to state 17

state 9

    (10) domain_def -> LPAREN DOMAIN_KEY . NAME RPAREN

    NAME            shift and go to state 18


state 10

    (11) problem_def -> LPAREN PROBLEM_KEY . NAME RPAREN

    NAME            shift and go to state 19


state 11

    (17) require_def -> LPAREN . REQUIREMENTS_KEY require_key_lst RPAREN
    (31) predicates_def -> LPAREN . PREDICATES_KEY predicate_def_lst RPAREN
    (46) action_def -> LPAREN . ACTION_KEY NAME parameters_def precond_def effects_def RPAREN

    REQUIREMENTS_KEY shift and go to state 20
    PREDICATES_KEY  shift and go to state 21
    ACTION_KEY      shift and go to state 22


state 12

    (3) domain -> LPAREN DEFINE_KEY domain_def require_def . types_def constants_def predicates_def action_def_lst RPAREN
    (4) domain -> LPAREN DEFINE_KEY domain_def require_def . types_def predicates_def action_def_lst RPAREN
    (5) domain -> LPAREN DEFINE_KEY domain_def require_def . predicates_def action_def_lst RPAREN
    (25) types_def -> . LPAREN TYPES_KEY typed_lst_name RPAREN
    (31) predicates_def -> . LPAREN PREDICATES_KEY predicate_def_lst RPAREN

    LPAREN          shift and go to state 23

    types_def                      shift and go to state 24
    predicates_def                 shift and go to state 25

state 13

    (6) domain -> LPAREN DEFINE_KEY domain_def predicates_def . action_def_lst RPAREN
    (44) action_def_lst -> . action_def action_def_lst
    (45) action_def_lst -> . action_def
    (46) action_def -> . LPAREN ACTION_KEY NAME parameters_def precond_def effects_def RPAREN

    LPAREN          shift and go to state 26

    action_def_lst                 shift and go to state 27
    action_def                     shift and go to state 15

state 14

    (7) domain -> LPAREN DEFINE_KEY domain_def action_def_lst . RPAREN

    RPAREN          shift and go to state 28


state 15

    (44) action_def_lst -> action_def . action_def_lst
    (45) action_def_lst -> action_def .
    (44) action_def_lst -> . action_def action_def_lst
    (45) action_def_lst -> . action_def
    (46) action_def -> . LPAREN ACTION_KEY NAME parameters_def precond_def effects_def RPAREN

    RPAREN          reduce using rule 45 (action_def_lst -> action_def .)
    LPAREN          shift and go to state 26

    action_def                     shift and go to state 15
    action_def_lst                 shift and go to state 29

state 16

    (9) domain_pdef -> LPAREN . DOMAIN_PKEY NAME RPAREN

    DOMAIN_PKEY     shift and go to state 30


state 17

    (8) problem -> LPAREN DEFINE_KEY problem_def domain_pdef . objects_def init_def goal_def RPAREN
    (12) objects_def -> . LPAREN OBJECTS_KEY typed_constants_lst RPAREN

    LPAREN          shift and go to state 31

    objects_def                    shift and go to state 32

state 18

    (10) domain_def -> LPAREN DOMAIN_KEY NAME . RPAREN

    RPAREN          shift and go to state 33


state 19

    (11) problem_def -> LPAREN PROBLEM_KEY NAME . RPAREN

    RPAREN          shift and go to state 34


state 20

    (17) require_def -> LPAREN REQUIREMENTS_KEY . require_key_lst RPAREN
    (18) require_key_lst -> . require_key require_key_lst
    (19) require_key_lst -> . require_key
    (20) require_key -> . STRIPS_KEY
    (21) require_key -> . EQUALITY_KEY
    (22) require_key -> . TYPING_KEY
    (23) require_key -> . ADL_KEY
    (24) require_key -> . ND_KEY

    STRIPS_KEY      shift and go to state 37
    EQUALITY_KEY    shift and go to state 38
    TYPING_KEY      shift and go to state 39
    ADL_KEY         shift and go to state 40
    ND_KEY          shift and go to state 41

    require_key_lst                shift and go to state 35
    require_key                    shift and go to state 36

state 21

    (31) predicates_def -> LPAREN PREDICATES_KEY . predicate_def_lst RPAREN
    (32) predicate_def_lst -> . predicate_def predicate_def_lst
    (33) predicate_def_lst -> . predicate_def
    (34) predicate_def -> . LPAREN NAME typed_variables_lst RPAREN
    (35) predicate_def -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 42

    predicate_def_lst              shift and go to state 43
    predicate_def                  shift and go to state 44

state 22

    (46) action_def -> LPAREN ACTION_KEY . NAME parameters_def precond_def effects_def RPAREN

    NAME            shift and go to state 45


state 23

    (25) types_def -> LPAREN . TYPES_KEY typed_lst_name RPAREN
    (31) predicates_def -> LPAREN . PREDICATES_KEY predicate_def_lst RPAREN

    TYPES_KEY       shift and go to state 46
    PREDICATES_KEY  shift and go to state 21


state 24

    (3) domain -> LPAREN DEFINE_KEY domain_def require_def types_def . constants_def predicates_def action_def_lst RPAREN
    (4) domain -> LPAREN DEFINE_KEY domain_def require_def types_def . predicates_def action_def_lst RPAREN
    (26) constants_def -> . LPAREN CONSTANTS_KEY typed_constants_lst RPAREN
    (27) constants_def -> . LPAREN CONSTANTS_KEY names_lst RPAREN
    (31) predicates_def -> . LPAREN PREDICATES_KEY predicate_def_lst RPAREN

    LPAREN          shift and go to state 47

    constants_def                  shift and go to state 48
    predicates_def                 shift and go to state 49

state 25

    (5) domain -> LPAREN DEFINE_KEY domain_def require_def predicates_def . action_def_lst RPAREN
    (44) action_def_lst -> . action_def action_def_lst
    (45) action_def_lst -> . action_def
    (46) action_def -> . LPAREN ACTION_KEY NAME parameters_def precond_def effects_def RPAREN

    LPAREN          shift and go to state 26

    action_def_lst                 shift and go to state 50
    action_def                     shift and go to state 15

state 26

    (46) action_def -> LPAREN . ACTION_KEY NAME parameters_def precond_def effects_def RPAREN

    ACTION_KEY      shift and go to state 22


state 27

    (6) domain -> LPAREN DEFINE_KEY domain_def predicates_def action_def_lst . RPAREN

    RPAREN          shift and go to state 51


state 28

    (7) domain -> LPAREN DEFINE_KEY domain_def action_def_lst RPAREN .

    $end            reduce using rule 7 (domain -> LPAREN DEFINE_KEY domain_def action_def_lst RPAREN .)


state 29

    (44) action_def_lst -> action_def action_def_lst .

    RPAREN          reduce using rule 44 (action_def_lst -> action_def action_def_lst .)


state 30

    (9) domain_pdef -> LPAREN DOMAIN_PKEY . NAME RPAREN

    NAME            shift and go to state 52


state 31

    (12) objects_def -> LPAREN . OBJECTS_KEY typed_constants_lst RPAREN

    OBJECTS_KEY     shift and go to state 53


state 32

    (8) problem -> LPAREN DEFINE_KEY problem_def domain_pdef objects_def . init_def goal_def RPAREN
    (13) init_def -> . LPAREN INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN
    (14) init_def -> . LPAREN INIT_KEY ground_predicates_lst RPAREN

    LPAREN          shift and go to state 54

    init_def                       shift and go to state 55

state 33

    (10) domain_def -> LPAREN DOMAIN_KEY NAME RPAREN .

    LPAREN          reduce using rule 10 (domain_def -> LPAREN DOMAIN_KEY NAME RPAREN .)


state 34

    (11) problem_def -> LPAREN PROBLEM_KEY NAME RPAREN .

    LPAREN          reduce using rule 11 (problem_def -> LPAREN PROBLEM_KEY NAME RPAREN .)


state 35

    (17) require_def -> LPAREN REQUIREMENTS_KEY require_key_lst . RPAREN

    RPAREN          shift and go to state 56


state 36

    (18) require_key_lst -> require_key . require_key_lst
    (19) require_key_lst -> require_key .
    (18) require_key_lst -> . require_key require_key_lst
    (19) require_key_lst -> . require_key
    (20) require_key -> . STRIPS_KEY
    (21) require_key -> . EQUALITY_KEY
    (22) require_key -> . TYPING_KEY
    (23) require_key -> . ADL_KEY
    (24) require_key -> . ND_KEY

    RPAREN          reduce using rule 19 (require_key_lst -> require_key .)
    STRIPS_KEY      shift and go to state 37
    EQUALITY_KEY    shift and go to state 38
    TYPING_KEY      shift and go to state 39
    ADL_KEY         shift and go to state 40
    ND_KEY          shift and go to state 41

    require_key                    shift and go to state 36
    require_key_lst                shift and go to state 57

state 37

    (20) require_key -> STRIPS_KEY .

    STRIPS_KEY      reduce using rule 20 (require_key -> STRIPS_KEY .)
    EQUALITY_KEY    reduce using rule 20 (require_key -> STRIPS_KEY .)
    TYPING_KEY      reduce using rule 20 (require_key -> STRIPS_KEY .)
    ADL_KEY         reduce using rule 20 (require_key -> STRIPS_KEY .)
    ND_KEY          reduce using rule 20 (require_key -> STRIPS_KEY .)
    RPAREN          reduce using rule 20 (require_key -> STRIPS_KEY .)


state 38

    (21) require_key -> EQUALITY_KEY .

    STRIPS_KEY      reduce using rule 21 (require_key -> EQUALITY_KEY .)
    EQUALITY_KEY    reduce using rule 21 (require_key -> EQUALITY_KEY .)
    TYPING_KEY      reduce using rule 21 (require_key -> EQUALITY_KEY .)
    ADL_KEY         reduce using rule 21 (require_key -> EQUALITY_KEY .)
    ND_KEY          reduce using rule 21 (require_key -> EQUALITY_KEY .)
    RPAREN          reduce using rule 21 (require_key -> EQUALITY_KEY .)


state 39

    (22) require_key -> TYPING_KEY .

    STRIPS_KEY      reduce using rule 22 (require_key -> TYPING_KEY .)
    EQUALITY_KEY    reduce using rule 22 (require_key -> TYPING_KEY .)
    TYPING_KEY      reduce using rule 22 (require_key -> TYPING_KEY .)
    ADL_KEY         reduce using rule 22 (require_key -> TYPING_KEY .)
    ND_KEY          reduce using rule 22 (require_key -> TYPING_KEY .)
    RPAREN          reduce using rule 22 (require_key -> TYPING_KEY .)


state 40

    (23) require_key -> ADL_KEY .

    STRIPS_KEY      reduce using rule 23 (require_key -> ADL_KEY .)
    EQUALITY_KEY    reduce using rule 23 (require_key -> ADL_KEY .)
    TYPING_KEY      reduce using rule 23 (require_key -> ADL_KEY .)
    ADL_KEY         reduce using rule 23 (require_key -> ADL_KEY .)
    ND_KEY          reduce using rule 23 (require_key -> ADL_KEY .)
    RPAREN          reduce using rule 23 (require_key -> ADL_KEY .)


state 41

    (24) require_key -> ND_KEY .

    STRIPS_KEY      reduce using rule 24 (require_key -> ND_KEY .)
    EQUALITY_KEY    reduce using rule 24 (require_key -> ND_KEY .)
    TYPING_KEY      reduce using rule 24 (require_key -> ND_KEY .)
    ADL_KEY         reduce using rule 24 (require_key -> ND_KEY .)
    ND_KEY          reduce using rule 24 (require_key -> ND_KEY .)
    RPAREN          reduce using rule 24 (require_key -> ND_KEY .)


state 42

    (34) predicate_def -> LPAREN . NAME typed_variables_lst RPAREN
    (35) predicate_def -> LPAREN . NAME RPAREN

    NAME            shift and go to state 58


state 43

    (31) predicates_def -> LPAREN PREDICATES_KEY predicate_def_lst . RPAREN

    RPAREN          shift and go to state 59


state 44

    (32) predicate_def_lst -> predicate_def . predicate_def_lst
    (33) predicate_def_lst -> predicate_def .
    (32) predicate_def_lst -> . predicate_def predicate_def_lst
    (33) predicate_def_lst -> . predicate_def
    (34) predicate_def -> . LPAREN NAME typed_variables_lst RPAREN
    (35) predicate_def -> . LPAREN NAME RPAREN

    RPAREN          reduce using rule 33 (predicate_def_lst -> predicate_def .)
    LPAREN          shift and go to state 42

    predicate_def                  shift and go to state 44
    predicate_def_lst              shift and go to state 60

state 45

    (46) action_def -> LPAREN ACTION_KEY NAME . parameters_def precond_def effects_def RPAREN
    (47) parameters_def -> . PARAMETERS_KEY LPAREN typed_variables_lst RPAREN
    (48) parameters_def -> . PARAMETERS_KEY LPAREN RPAREN

    PARAMETERS_KEY  shift and go to state 62

    parameters_def                 shift and go to state 61

state 46

    (25) types_def -> LPAREN TYPES_KEY . typed_lst_name RPAREN
    (28) typed_lst_name -> . names_lst
    (29) names_lst -> . NAME names_lst
    (30) names_lst -> . NAME

    NAME            shift and go to state 65

    typed_lst_name                 shift and go to state 63
    names_lst                      shift and go to state 64

state 47

    (26) constants_def -> LPAREN . CONSTANTS_KEY typed_constants_lst RPAREN
    (27) constants_def -> LPAREN . CONSTANTS_KEY names_lst RPAREN
    (31) predicates_def -> LPAREN . PREDICATES_KEY predicate_def_lst RPAREN

    CONSTANTS_KEY   shift and go to state 66
    PREDICATES_KEY  shift and go to state 21


state 48

    (3) domain -> LPAREN DEFINE_KEY domain_def require_def types_def constants_def . predicates_def action_def_lst RPAREN
    (31) predicates_def -> . LPAREN PREDICATES_KEY predicate_def_lst RPAREN

    LPAREN          shift and go to state 67

    predicates_def                 shift and go to state 68

state 49

    (4) domain -> LPAREN DEFINE_KEY domain_def require_def types_def predicates_def . action_def_lst RPAREN
    (44) action_def_lst -> . action_def action_def_lst
    (45) action_def_lst -> . action_def
    (46) action_def -> . LPAREN ACTION_KEY NAME parameters_def precond_def effects_def RPAREN

    LPAREN          shift and go to state 26

    action_def_lst                 shift and go to state 69
    action_def                     shift and go to state 15

state 50

    (5) domain -> LPAREN DEFINE_KEY domain_def require_def predicates_def action_def_lst . RPAREN

    RPAREN          shift and go to state 70


state 51

    (6) domain -> LPAREN DEFINE_KEY domain_def predicates_def action_def_lst RPAREN .

    $end            reduce using rule 6 (domain -> LPAREN DEFINE_KEY domain_def predicates_def action_def_lst RPAREN .)


state 52

    (9) domain_pdef -> LPAREN DOMAIN_PKEY NAME . RPAREN

    RPAREN          shift and go to state 71


state 53

    (12) objects_def -> LPAREN OBJECTS_KEY . typed_constants_lst RPAREN
    (42) typed_constants_lst -> . constants_lst HYPHEN type typed_constants_lst
    (43) typed_constants_lst -> . constants_lst HYPHEN type
    (40) constants_lst -> . constant constants_lst
    (41) constants_lst -> . constant
    (100) constant -> . NAME

    NAME            shift and go to state 75

    typed_constants_lst            shift and go to state 72
    constants_lst                  shift and go to state 73
    constant                       shift and go to state 74

state 54

    (13) init_def -> LPAREN . INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN
    (14) init_def -> LPAREN . INIT_KEY ground_predicates_lst RPAREN

    INIT_KEY        shift and go to state 76


state 55

    (8) problem -> LPAREN DEFINE_KEY problem_def domain_pdef objects_def init_def . goal_def RPAREN
    (15) goal_def -> . LPAREN GOAL_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN
    (16) goal_def -> . LPAREN GOAL_KEY ground_predicate RPAREN

    LPAREN          shift and go to state 77

    goal_def                       shift and go to state 78

state 56

    (17) require_def -> LPAREN REQUIREMENTS_KEY require_key_lst RPAREN .

    LPAREN          reduce using rule 17 (require_def -> LPAREN REQUIREMENTS_KEY require_key_lst RPAREN .)


state 57

    (18) require_key_lst -> require_key require_key_lst .

    RPAREN          reduce using rule 18 (require_key_lst -> require_key require_key_lst .)


state 58

    (34) predicate_def -> LPAREN NAME . typed_variables_lst RPAREN
    (35) predicate_def -> LPAREN NAME . RPAREN
    (95) typed_variables_lst -> . variables_lst HYPHEN type typed_variables_lst
    (96) typed_variables_lst -> . variables_lst HYPHEN type
    (97) variables_lst -> . VARIABLE variables_lst
    (98) variables_lst -> . VARIABLE

    RPAREN          shift and go to state 80
    VARIABLE        shift and go to state 82

    typed_variables_lst            shift and go to state 79
    variables_lst                  shift and go to state 81

state 59

    (31) predicates_def -> LPAREN PREDICATES_KEY predicate_def_lst RPAREN .

    LPAREN          reduce using rule 31 (predicates_def -> LPAREN PREDICATES_KEY predicate_def_lst RPAREN .)


state 60

    (32) predicate_def_lst -> predicate_def predicate_def_lst .

    RPAREN          reduce using rule 32 (predicate_def_lst -> predicate_def predicate_def_lst .)


state 61

    (46) action_def -> LPAREN ACTION_KEY NAME parameters_def . precond_def effects_def RPAREN
    (49) precond_def -> . PRECONDITION_KEY LPAREN formula RPAREN

    PRECONDITION_KEY shift and go to state 84

    precond_def                    shift and go to state 83

state 62

    (47) parameters_def -> PARAMETERS_KEY . LPAREN typed_variables_lst RPAREN
    (48) parameters_def -> PARAMETERS_KEY . LPAREN RPAREN

    LPAREN          shift and go to state 85


state 63

    (25) types_def -> LPAREN TYPES_KEY typed_lst_name . RPAREN

    RPAREN          shift and go to state 86


state 64

    (28) typed_lst_name -> names_lst .

    RPAREN          reduce using rule 28 (typed_lst_name -> names_lst .)


state 65

    (29) names_lst -> NAME . names_lst
    (30) names_lst -> NAME .
    (29) names_lst -> . NAME names_lst
    (30) names_lst -> . NAME

    RPAREN          reduce using rule 30 (names_lst -> NAME .)
    NAME            shift and go to state 65

    names_lst                      shift and go to state 87

state 66

    (26) constants_def -> LPAREN CONSTANTS_KEY . typed_constants_lst RPAREN
    (27) constants_def -> LPAREN CONSTANTS_KEY . names_lst RPAREN
    (42) typed_constants_lst -> . constants_lst HYPHEN type typed_constants_lst
    (43) typed_constants_lst -> . constants_lst HYPHEN type
    (29) names_lst -> . NAME names_lst
    (30) names_lst -> . NAME
    (40) constants_lst -> . constant constants_lst
    (41) constants_lst -> . constant
    (100) constant -> . NAME

    NAME            shift and go to state 90

    typed_constants_lst            shift and go to state 88
    names_lst                      shift and go to state 89
    constants_lst                  shift and go to state 73
    constant                       shift and go to state 74

state 67

    (31) predicates_def -> LPAREN . PREDICATES_KEY predicate_def_lst RPAREN

    PREDICATES_KEY  shift and go to state 21


state 68

    (3) domain -> LPAREN DEFINE_KEY domain_def require_def types_def constants_def predicates_def . action_def_lst RPAREN
    (44) action_def_lst -> . action_def action_def_lst
    (45) action_def_lst -> . action_def
    (46) action_def -> . LPAREN ACTION_KEY NAME parameters_def precond_def effects_def RPAREN

    LPAREN          shift and go to state 26

    action_def_lst                 shift and go to state 91
    action_def                     shift and go to state 15

state 69

    (4) domain -> LPAREN DEFINE_KEY domain_def require_def types_def predicates_def action_def_lst . RPAREN

    RPAREN          shift and go to state 92


state 70

    (5) domain -> LPAREN DEFINE_KEY domain_def require_def predicates_def action_def_lst RPAREN .

    $end            reduce using rule 5 (domain -> LPAREN DEFINE_KEY domain_def require_def predicates_def action_def_lst RPAREN .)


state 71

    (9) domain_pdef -> LPAREN DOMAIN_PKEY NAME RPAREN .

    LPAREN          reduce using rule 9 (domain_pdef -> LPAREN DOMAIN_PKEY NAME RPAREN .)


state 72

    (12) objects_def -> LPAREN OBJECTS_KEY typed_constants_lst . RPAREN

    RPAREN          shift and go to state 93


state 73

    (42) typed_constants_lst -> constants_lst . HYPHEN type typed_constants_lst
    (43) typed_constants_lst -> constants_lst . HYPHEN type

    HYPHEN          shift and go to state 94


state 74

    (40) constants_lst -> constant . constants_lst
    (41) constants_lst -> constant .
    (40) constants_lst -> . constant constants_lst
    (41) constants_lst -> . constant
    (100) constant -> . NAME

    HYPHEN          reduce using rule 41 (constants_lst -> constant .)
    RPAREN          reduce using rule 41 (constants_lst -> constant .)
    NAME            shift and go to state 75

    constant                       shift and go to state 74
    constants_lst                  shift and go to state 95

state 75

    (100) constant -> NAME .

    NAME            reduce using rule 100 (constant -> NAME .)
    HYPHEN          reduce using rule 100 (constant -> NAME .)
    RPAREN          reduce using rule 100 (constant -> NAME .)


state 76

    (13) init_def -> LPAREN INIT_KEY . LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN
    (14) init_def -> LPAREN INIT_KEY . ground_predicates_lst RPAREN
    (36) ground_predicates_lst -> . ground_predicate ground_predicates_lst
    (37) ground_predicates_lst -> . ground_predicate
    (38) ground_predicate -> . LPAREN NAME RPAREN
    (39) ground_predicate -> . LPAREN NAME constants_lst RPAREN

    LPAREN          shift and go to state 96

    ground_predicates_lst          shift and go to state 97
    ground_predicate               shift and go to state 98

state 77

    (15) goal_def -> LPAREN . GOAL_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN
    (16) goal_def -> LPAREN . GOAL_KEY ground_predicate RPAREN

    GOAL_KEY        shift and go to state 99


state 78

    (8) problem -> LPAREN DEFINE_KEY problem_def domain_pdef objects_def init_def goal_def . RPAREN

    RPAREN          shift and go to state 100


state 79

    (34) predicate_def -> LPAREN NAME typed_variables_lst . RPAREN

    RPAREN          shift and go to state 101


state 80

    (35) predicate_def -> LPAREN NAME RPAREN .

    LPAREN          reduce using rule 35 (predicate_def -> LPAREN NAME RPAREN .)
    RPAREN          reduce using rule 35 (predicate_def -> LPAREN NAME RPAREN .)


state 81

    (95) typed_variables_lst -> variables_lst . HYPHEN type typed_variables_lst
    (96) typed_variables_lst -> variables_lst . HYPHEN type

    HYPHEN          shift and go to state 102


state 82

    (97) variables_lst -> VARIABLE . variables_lst
    (98) variables_lst -> VARIABLE .
    (97) variables_lst -> . VARIABLE variables_lst
    (98) variables_lst -> . VARIABLE

    HYPHEN          reduce using rule 98 (variables_lst -> VARIABLE .)
    RPAREN          reduce using rule 98 (variables_lst -> VARIABLE .)
    AND_KEY         reduce using rule 98 (variables_lst -> VARIABLE .)
    OR_KEY          reduce using rule 98 (variables_lst -> VARIABLE .)
    NOT_KEY         reduce using rule 98 (variables_lst -> VARIABLE .)
    IMPLY_KEY       reduce using rule 98 (variables_lst -> VARIABLE .)
    EXISTS_KEY      reduce using rule 98 (variables_lst -> VARIABLE .)
    FORALL_KEY      reduce using rule 98 (variables_lst -> VARIABLE .)
    LPAREN          reduce using rule 98 (variables_lst -> VARIABLE .)
    NAME            reduce using rule 98 (variables_lst -> VARIABLE .)
    EQUALS          reduce using rule 98 (variables_lst -> VARIABLE .)
    ONEOF_KEY       reduce using rule 98 (variables_lst -> VARIABLE .)
    WHEN_KEY        reduce using rule 98 (variables_lst -> VARIABLE .)
    VARIABLE        shift and go to state 82

    variables_lst                  shift and go to state 103

state 83

    (46) action_def -> LPAREN ACTION_KEY NAME parameters_def precond_def . effects_def RPAREN
    (66) effects_def -> . EFFECT_KEY LPAREN one_eff_formula RPAREN

    EFFECT_KEY      shift and go to state 105

    effects_def                    shift and go to state 104

state 84

    (49) precond_def -> PRECONDITION_KEY . LPAREN formula RPAREN

    LPAREN          shift and go to state 106


state 85

    (47) parameters_def -> PARAMETERS_KEY LPAREN . typed_variables_lst RPAREN
    (48) parameters_def -> PARAMETERS_KEY LPAREN . RPAREN
    (95) typed_variables_lst -> . variables_lst HYPHEN type typed_variables_lst
    (96) typed_variables_lst -> . variables_lst HYPHEN type
    (97) variables_lst -> . VARIABLE variables_lst
    (98) variables_lst -> . VARIABLE

    RPAREN          shift and go to state 108
    VARIABLE        shift and go to state 82

    typed_variables_lst            shift and go to state 107
    variables_lst                  shift and go to state 81

state 86

    (25) types_def -> LPAREN TYPES_KEY typed_lst_name RPAREN .

    LPAREN          reduce using rule 25 (types_def -> LPAREN TYPES_KEY typed_lst_name RPAREN .)


state 87

    (29) names_lst -> NAME names_lst .

    RPAREN          reduce using rule 29 (names_lst -> NAME names_lst .)


state 88

    (26) constants_def -> LPAREN CONSTANTS_KEY typed_constants_lst . RPAREN

    RPAREN          shift and go to state 109


state 89

    (27) constants_def -> LPAREN CONSTANTS_KEY names_lst . RPAREN

    RPAREN          shift and go to state 110


state 90

    (29) names_lst -> NAME . names_lst
    (30) names_lst -> NAME .
    (100) constant -> NAME .
    (29) names_lst -> . NAME names_lst
    (30) names_lst -> . NAME

  ! shift/reduce conflict for NAME resolved as shift
    RPAREN          reduce using rule 30 (names_lst -> NAME .)
    HYPHEN          reduce using rule 100 (constant -> NAME .)
    NAME            shift and go to state 65

  ! NAME            [ reduce using rule 100 (constant -> NAME .) ]

    names_lst                      shift and go to state 87

state 91

    (3) domain -> LPAREN DEFINE_KEY domain_def require_def types_def constants_def predicates_def action_def_lst . RPAREN

    RPAREN          shift and go to state 111


state 92

    (4) domain -> LPAREN DEFINE_KEY domain_def require_def types_def predicates_def action_def_lst RPAREN .

    $end            reduce using rule 4 (domain -> LPAREN DEFINE_KEY domain_def require_def types_def predicates_def action_def_lst RPAREN .)


state 93

    (12) objects_def -> LPAREN OBJECTS_KEY typed_constants_lst RPAREN .

    LPAREN          reduce using rule 12 (objects_def -> LPAREN OBJECTS_KEY typed_constants_lst RPAREN .)


state 94

    (42) typed_constants_lst -> constants_lst HYPHEN . type typed_constants_lst
    (43) typed_constants_lst -> constants_lst HYPHEN . type
    (99) type -> . NAME

    NAME            shift and go to state 113

    type                           shift and go to state 112

state 95

    (40) constants_lst -> constant constants_lst .

    HYPHEN          reduce using rule 40 (constants_lst -> constant constants_lst .)
    RPAREN          reduce using rule 40 (constants_lst -> constant constants_lst .)


state 96

    (13) init_def -> LPAREN INIT_KEY LPAREN . AND_KEY ground_predicates_lst RPAREN RPAREN
    (38) ground_predicate -> LPAREN . NAME RPAREN
    (39) ground_predicate -> LPAREN . NAME constants_lst RPAREN

    AND_KEY         shift and go to state 114
    NAME            shift and go to state 115


state 97

    (14) init_def -> LPAREN INIT_KEY ground_predicates_lst . RPAREN

    RPAREN          shift and go to state 116


state 98

    (36) ground_predicates_lst -> ground_predicate . ground_predicates_lst
    (37) ground_predicates_lst -> ground_predicate .
    (36) ground_predicates_lst -> . ground_predicate ground_predicates_lst
    (37) ground_predicates_lst -> . ground_predicate
    (38) ground_predicate -> . LPAREN NAME RPAREN
    (39) ground_predicate -> . LPAREN NAME constants_lst RPAREN

    RPAREN          reduce using rule 37 (ground_predicates_lst -> ground_predicate .)
    LPAREN          shift and go to state 118

    ground_predicate               shift and go to state 98
    ground_predicates_lst          shift and go to state 117

state 99

    (15) goal_def -> LPAREN GOAL_KEY . LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN
    (16) goal_def -> LPAREN GOAL_KEY . ground_predicate RPAREN
    (38) ground_predicate -> . LPAREN NAME RPAREN
    (39) ground_predicate -> . LPAREN NAME constants_lst RPAREN

    LPAREN          shift and go to state 119

    ground_predicate               shift and go to state 120

state 100

    (8) problem -> LPAREN DEFINE_KEY problem_def domain_pdef objects_def init_def goal_def RPAREN .

    $end            reduce using rule 8 (problem -> LPAREN DEFINE_KEY problem_def domain_pdef objects_def init_def goal_def RPAREN .)


state 101

    (34) predicate_def -> LPAREN NAME typed_variables_lst RPAREN .

    LPAREN          reduce using rule 34 (predicate_def -> LPAREN NAME typed_variables_lst RPAREN .)
    RPAREN          reduce using rule 34 (predicate_def -> LPAREN NAME typed_variables_lst RPAREN .)


state 102

    (95) typed_variables_lst -> variables_lst HYPHEN . type typed_variables_lst
    (96) typed_variables_lst -> variables_lst HYPHEN . type
    (99) type -> . NAME

    NAME            shift and go to state 113

    type                           shift and go to state 121

state 103

    (97) variables_lst -> VARIABLE variables_lst .

    HYPHEN          reduce using rule 97 (variables_lst -> VARIABLE variables_lst .)
    RPAREN          reduce using rule 97 (variables_lst -> VARIABLE variables_lst .)
    AND_KEY         reduce using rule 97 (variables_lst -> VARIABLE variables_lst .)
    OR_KEY          reduce using rule 97 (variables_lst -> VARIABLE variables_lst .)
    NOT_KEY         reduce using rule 97 (variables_lst -> VARIABLE variables_lst .)
    IMPLY_KEY       reduce using rule 97 (variables_lst -> VARIABLE variables_lst .)
    EXISTS_KEY      reduce using rule 97 (variables_lst -> VARIABLE variables_lst .)
    FORALL_KEY      reduce using rule 97 (variables_lst -> VARIABLE variables_lst .)
    LPAREN          reduce using rule 97 (variables_lst -> VARIABLE variables_lst .)
    NAME            reduce using rule 97 (variables_lst -> VARIABLE variables_lst .)
    EQUALS          reduce using rule 97 (variables_lst -> VARIABLE variables_lst .)
    ONEOF_KEY       reduce using rule 97 (variables_lst -> VARIABLE variables_lst .)
    WHEN_KEY        reduce using rule 97 (variables_lst -> VARIABLE variables_lst .)


state 104

    (46) action_def -> LPAREN ACTION_KEY NAME parameters_def precond_def effects_def . RPAREN

    RPAREN          shift and go to state 122


state 105

    (66) effects_def -> EFFECT_KEY . LPAREN one_eff_formula RPAREN

    LPAREN          shift and go to state 123


state 106

    (49) precond_def -> PRECONDITION_KEY LPAREN . formula RPAREN
    (50) formula -> . literal
    (51) formula -> . AND_KEY formula_lst
    (52) formula -> . OR_KEY formula_lst
    (53) formula -> . NOT_KEY formula
    (54) formula -> . IMPLY_KEY formula formula
    (55) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (56) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (57) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (58) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (59) formula -> . LPAREN NOT_KEY formula RPAREN
    (60) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (61) formula -> . LPAREN literal RPAREN
    (62) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (63) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (87) literal -> . LPAREN NOT_KEY predicate RPAREN
    (88) literal -> . predicate
    (89) predicate -> . LPAREN NAME variables_lst RPAREN
    (90) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (91) predicate -> . LPAREN NAME RPAREN
    (92) predicate -> . NAME variables_lst
    (93) predicate -> . EQUALS VARIABLE VARIABLE
    (94) predicate -> . NAME

    AND_KEY         shift and go to state 127
    OR_KEY          shift and go to state 128
    NOT_KEY         shift and go to state 129
    IMPLY_KEY       shift and go to state 130
    EXISTS_KEY      shift and go to state 131
    FORALL_KEY      shift and go to state 132
    LPAREN          shift and go to state 124
    NAME            shift and go to state 134
    EQUALS          shift and go to state 135

    formula                        shift and go to state 125
    literal                        shift and go to state 126
    predicate                      shift and go to state 133

state 107

    (47) parameters_def -> PARAMETERS_KEY LPAREN typed_variables_lst . RPAREN

    RPAREN          shift and go to state 136


state 108

    (48) parameters_def -> PARAMETERS_KEY LPAREN RPAREN .

    PRECONDITION_KEY reduce using rule 48 (parameters_def -> PARAMETERS_KEY LPAREN RPAREN .)


state 109

    (26) constants_def -> LPAREN CONSTANTS_KEY typed_constants_lst RPAREN .

    LPAREN          reduce using rule 26 (constants_def -> LPAREN CONSTANTS_KEY typed_constants_lst RPAREN .)


state 110

    (27) constants_def -> LPAREN CONSTANTS_KEY names_lst RPAREN .

    LPAREN          reduce using rule 27 (constants_def -> LPAREN CONSTANTS_KEY names_lst RPAREN .)


state 111

    (3) domain -> LPAREN DEFINE_KEY domain_def require_def types_def constants_def predicates_def action_def_lst RPAREN .

    $end            reduce using rule 3 (domain -> LPAREN DEFINE_KEY domain_def require_def types_def constants_def predicates_def action_def_lst RPAREN .)


state 112

    (42) typed_constants_lst -> constants_lst HYPHEN type . typed_constants_lst
    (43) typed_constants_lst -> constants_lst HYPHEN type .
    (42) typed_constants_lst -> . constants_lst HYPHEN type typed_constants_lst
    (43) typed_constants_lst -> . constants_lst HYPHEN type
    (40) constants_lst -> . constant constants_lst
    (41) constants_lst -> . constant
    (100) constant -> . NAME

    RPAREN          reduce using rule 43 (typed_constants_lst -> constants_lst HYPHEN type .)
    NAME            shift and go to state 75

    constants_lst                  shift and go to state 73
    typed_constants_lst            shift and go to state 137
    constant                       shift and go to state 74

state 113

    (99) type -> NAME .

    NAME            reduce using rule 99 (type -> NAME .)
    RPAREN          reduce using rule 99 (type -> NAME .)
    VARIABLE        reduce using rule 99 (type -> NAME .)


state 114

    (13) init_def -> LPAREN INIT_KEY LPAREN AND_KEY . ground_predicates_lst RPAREN RPAREN
    (36) ground_predicates_lst -> . ground_predicate ground_predicates_lst
    (37) ground_predicates_lst -> . ground_predicate
    (38) ground_predicate -> . LPAREN NAME RPAREN
    (39) ground_predicate -> . LPAREN NAME constants_lst RPAREN

    LPAREN          shift and go to state 118

    ground_predicates_lst          shift and go to state 138
    ground_predicate               shift and go to state 98

state 115

    (38) ground_predicate -> LPAREN NAME . RPAREN
    (39) ground_predicate -> LPAREN NAME . constants_lst RPAREN
    (40) constants_lst -> . constant constants_lst
    (41) constants_lst -> . constant
    (100) constant -> . NAME

    RPAREN          shift and go to state 139
    NAME            shift and go to state 75

    constants_lst                  shift and go to state 140
    constant                       shift and go to state 74

state 116

    (14) init_def -> LPAREN INIT_KEY ground_predicates_lst RPAREN .

    LPAREN          reduce using rule 14 (init_def -> LPAREN INIT_KEY ground_predicates_lst RPAREN .)


state 117

    (36) ground_predicates_lst -> ground_predicate ground_predicates_lst .

    RPAREN          reduce using rule 36 (ground_predicates_lst -> ground_predicate ground_predicates_lst .)


state 118

    (38) ground_predicate -> LPAREN . NAME RPAREN
    (39) ground_predicate -> LPAREN . NAME constants_lst RPAREN

    NAME            shift and go to state 115


state 119

    (15) goal_def -> LPAREN GOAL_KEY LPAREN . AND_KEY ground_predicates_lst RPAREN RPAREN
    (38) ground_predicate -> LPAREN . NAME RPAREN
    (39) ground_predicate -> LPAREN . NAME constants_lst RPAREN

    AND_KEY         shift and go to state 141
    NAME            shift and go to state 115


state 120

    (16) goal_def -> LPAREN GOAL_KEY ground_predicate . RPAREN

    RPAREN          shift and go to state 142


state 121

    (95) typed_variables_lst -> variables_lst HYPHEN type . typed_variables_lst
    (96) typed_variables_lst -> variables_lst HYPHEN type .
    (95) typed_variables_lst -> . variables_lst HYPHEN type typed_variables_lst
    (96) typed_variables_lst -> . variables_lst HYPHEN type
    (97) variables_lst -> . VARIABLE variables_lst
    (98) variables_lst -> . VARIABLE

    RPAREN          reduce using rule 96 (typed_variables_lst -> variables_lst HYPHEN type .)
    VARIABLE        shift and go to state 82

    variables_lst                  shift and go to state 81
    typed_variables_lst            shift and go to state 143

state 122

    (46) action_def -> LPAREN ACTION_KEY NAME parameters_def precond_def effects_def RPAREN .

    LPAREN          reduce using rule 46 (action_def -> LPAREN ACTION_KEY NAME parameters_def precond_def effects_def RPAREN .)
    RPAREN          reduce using rule 46 (action_def -> LPAREN ACTION_KEY NAME parameters_def precond_def effects_def RPAREN .)


state 123

    (66) effects_def -> EFFECT_KEY LPAREN . one_eff_formula RPAREN
    (67) one_eff_formula -> . literal
    (68) one_eff_formula -> . AND_KEY
    (69) one_eff_formula -> . AND_KEY one_eff_formula_lst
    (70) one_eff_formula -> . ONEOF_KEY atomic_eff_lst
    (71) one_eff_formula -> . WHEN_KEY formula atomic_eff
    (72) one_eff_formula -> . LPAREN ONEOF_KEY atomic_eff_lst RPAREN
    (73) one_eff_formula -> . LPAREN WHEN_KEY formula atomic_eff RPAREN
    (74) one_eff_formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN atomic_eff RPAREN
    (75) one_eff_formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN
    (87) literal -> . LPAREN NOT_KEY predicate RPAREN
    (88) literal -> . predicate
    (89) predicate -> . LPAREN NAME variables_lst RPAREN
    (90) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (91) predicate -> . LPAREN NAME RPAREN
    (92) predicate -> . NAME variables_lst
    (93) predicate -> . EQUALS VARIABLE VARIABLE
    (94) predicate -> . NAME

    AND_KEY         shift and go to state 147
    ONEOF_KEY       shift and go to state 148
    WHEN_KEY        shift and go to state 149
    LPAREN          shift and go to state 144
    NAME            shift and go to state 134
    EQUALS          shift and go to state 135

    one_eff_formula                shift and go to state 145
    literal                        shift and go to state 146
    predicate                      shift and go to state 133

state 124

    (57) formula -> LPAREN . AND_KEY formula_lst RPAREN
    (58) formula -> LPAREN . OR_KEY formula_lst RPAREN
    (59) formula -> LPAREN . NOT_KEY formula RPAREN
    (60) formula -> LPAREN . IMPLY_KEY formula formula RPAREN
    (61) formula -> LPAREN . literal RPAREN
    (62) formula -> LPAREN . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (63) formula -> LPAREN . FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (87) literal -> LPAREN . NOT_KEY predicate RPAREN
    (89) predicate -> LPAREN . NAME variables_lst RPAREN
    (90) predicate -> LPAREN . EQUALS VARIABLE VARIABLE RPAREN
    (91) predicate -> LPAREN . NAME RPAREN
    (87) literal -> . LPAREN NOT_KEY predicate RPAREN
    (88) literal -> . predicate
    (89) predicate -> . LPAREN NAME variables_lst RPAREN
    (90) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (91) predicate -> . LPAREN NAME RPAREN
    (92) predicate -> . NAME variables_lst
    (93) predicate -> . EQUALS VARIABLE VARIABLE
    (94) predicate -> . NAME

    AND_KEY         shift and go to state 151
    OR_KEY          shift and go to state 152
    NOT_KEY         shift and go to state 153
    IMPLY_KEY       shift and go to state 154
    EXISTS_KEY      shift and go to state 156
    FORALL_KEY      shift and go to state 157
    NAME            shift and go to state 158
    EQUALS          shift and go to state 159
    LPAREN          shift and go to state 150

    literal                        shift and go to state 155
    predicate                      shift and go to state 133

state 125

    (49) precond_def -> PRECONDITION_KEY LPAREN formula . RPAREN

    RPAREN          shift and go to state 160


state 126

    (50) formula -> literal .

    RPAREN          reduce using rule 50 (formula -> literal .)
    AND_KEY         reduce using rule 50 (formula -> literal .)
    OR_KEY          reduce using rule 50 (formula -> literal .)
    NOT_KEY         reduce using rule 50 (formula -> literal .)
    IMPLY_KEY       reduce using rule 50 (formula -> literal .)
    EXISTS_KEY      reduce using rule 50 (formula -> literal .)
    FORALL_KEY      reduce using rule 50 (formula -> literal .)
    LPAREN          reduce using rule 50 (formula -> literal .)
    NAME            reduce using rule 50 (formula -> literal .)
    EQUALS          reduce using rule 50 (formula -> literal .)


state 127

    (51) formula -> AND_KEY . formula_lst
    (64) formula_lst -> . formula formula_lst
    (65) formula_lst -> . formula
    (50) formula -> . literal
    (51) formula -> . AND_KEY formula_lst
    (52) formula -> . OR_KEY formula_lst
    (53) formula -> . NOT_KEY formula
    (54) formula -> . IMPLY_KEY formula formula
    (55) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (56) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (57) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (58) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (59) formula -> . LPAREN NOT_KEY formula RPAREN
    (60) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (61) formula -> . LPAREN literal RPAREN
    (62) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (63) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (87) literal -> . LPAREN NOT_KEY predicate RPAREN
    (88) literal -> . predicate
    (89) predicate -> . LPAREN NAME variables_lst RPAREN
    (90) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (91) predicate -> . LPAREN NAME RPAREN
    (92) predicate -> . NAME variables_lst
    (93) predicate -> . EQUALS VARIABLE VARIABLE
    (94) predicate -> . NAME

    AND_KEY         shift and go to state 127
    OR_KEY          shift and go to state 128
    NOT_KEY         shift and go to state 129
    IMPLY_KEY       shift and go to state 130
    EXISTS_KEY      shift and go to state 131
    FORALL_KEY      shift and go to state 132
    LPAREN          shift and go to state 124
    NAME            shift and go to state 134
    EQUALS          shift and go to state 135

    formula_lst                    shift and go to state 161
    formula                        shift and go to state 162
    literal                        shift and go to state 126
    predicate                      shift and go to state 133

state 128

    (52) formula -> OR_KEY . formula_lst
    (64) formula_lst -> . formula formula_lst
    (65) formula_lst -> . formula
    (50) formula -> . literal
    (51) formula -> . AND_KEY formula_lst
    (52) formula -> . OR_KEY formula_lst
    (53) formula -> . NOT_KEY formula
    (54) formula -> . IMPLY_KEY formula formula
    (55) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (56) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (57) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (58) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (59) formula -> . LPAREN NOT_KEY formula RPAREN
    (60) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (61) formula -> . LPAREN literal RPAREN
    (62) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (63) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (87) literal -> . LPAREN NOT_KEY predicate RPAREN
    (88) literal -> . predicate
    (89) predicate -> . LPAREN NAME variables_lst RPAREN
    (90) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (91) predicate -> . LPAREN NAME RPAREN
    (92) predicate -> . NAME variables_lst
    (93) predicate -> . EQUALS VARIABLE VARIABLE
    (94) predicate -> . NAME

    AND_KEY         shift and go to state 127
    OR_KEY          shift and go to state 128
    NOT_KEY         shift and go to state 129
    IMPLY_KEY       shift and go to state 130
    EXISTS_KEY      shift and go to state 131
    FORALL_KEY      shift and go to state 132
    LPAREN          shift and go to state 124
    NAME            shift and go to state 134
    EQUALS          shift and go to state 135

    formula_lst                    shift and go to state 163
    formula                        shift and go to state 162
    literal                        shift and go to state 126
    predicate                      shift and go to state 133

state 129

    (53) formula -> NOT_KEY . formula
    (50) formula -> . literal
    (51) formula -> . AND_KEY formula_lst
    (52) formula -> . OR_KEY formula_lst
    (53) formula -> . NOT_KEY formula
    (54) formula -> . IMPLY_KEY formula formula
    (55) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (56) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (57) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (58) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (59) formula -> . LPAREN NOT_KEY formula RPAREN
    (60) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (61) formula -> . LPAREN literal RPAREN
    (62) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (63) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (87) literal -> . LPAREN NOT_KEY predicate RPAREN
    (88) literal -> . predicate
    (89) predicate -> . LPAREN NAME variables_lst RPAREN
    (90) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (91) predicate -> . LPAREN NAME RPAREN
    (92) predicate -> . NAME variables_lst
    (93) predicate -> . EQUALS VARIABLE VARIABLE
    (94) predicate -> . NAME

    AND_KEY         shift and go to state 127
    OR_KEY          shift and go to state 128
    NOT_KEY         shift and go to state 129
    IMPLY_KEY       shift and go to state 130
    EXISTS_KEY      shift and go to state 131
    FORALL_KEY      shift and go to state 132
    LPAREN          shift and go to state 124
    NAME            shift and go to state 134
    EQUALS          shift and go to state 135

    formula                        shift and go to state 164
    literal                        shift and go to state 126
    predicate                      shift and go to state 133

state 130

    (54) formula -> IMPLY_KEY . formula formula
    (50) formula -> . literal
    (51) formula -> . AND_KEY formula_lst
    (52) formula -> . OR_KEY formula_lst
    (53) formula -> . NOT_KEY formula
    (54) formula -> . IMPLY_KEY formula formula
    (55) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (56) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (57) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (58) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (59) formula -> . LPAREN NOT_KEY formula RPAREN
    (60) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (61) formula -> . LPAREN literal RPAREN
    (62) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (63) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (87) literal -> . LPAREN NOT_KEY predicate RPAREN
    (88) literal -> . predicate
    (89) predicate -> . LPAREN NAME variables_lst RPAREN
    (90) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (91) predicate -> . LPAREN NAME RPAREN
    (92) predicate -> . NAME variables_lst
    (93) predicate -> . EQUALS VARIABLE VARIABLE
    (94) predicate -> . NAME

    AND_KEY         shift and go to state 127
    OR_KEY          shift and go to state 128
    NOT_KEY         shift and go to state 129
    IMPLY_KEY       shift and go to state 130
    EXISTS_KEY      shift and go to state 131
    FORALL_KEY      shift and go to state 132
    LPAREN          shift and go to state 124
    NAME            shift and go to state 134
    EQUALS          shift and go to state 135

    formula                        shift and go to state 165
    literal                        shift and go to state 126
    predicate                      shift and go to state 133

state 131

    (55) formula -> EXISTS_KEY . LPAREN typed_variables_lst RPAREN formula

    LPAREN          shift and go to state 166


state 132

    (56) formula -> FORALL_KEY . LPAREN typed_variables_lst RPAREN formula

    LPAREN          shift and go to state 167


state 133

    (88) literal -> predicate .

    RPAREN          reduce using rule 88 (literal -> predicate .)
    AND_KEY         reduce using rule 88 (literal -> predicate .)
    OR_KEY          reduce using rule 88 (literal -> predicate .)
    NOT_KEY         reduce using rule 88 (literal -> predicate .)
    IMPLY_KEY       reduce using rule 88 (literal -> predicate .)
    EXISTS_KEY      reduce using rule 88 (literal -> predicate .)
    FORALL_KEY      reduce using rule 88 (literal -> predicate .)
    LPAREN          reduce using rule 88 (literal -> predicate .)
    NAME            reduce using rule 88 (literal -> predicate .)
    EQUALS          reduce using rule 88 (literal -> predicate .)
    ONEOF_KEY       reduce using rule 88 (literal -> predicate .)
    WHEN_KEY        reduce using rule 88 (literal -> predicate .)


state 134

    (92) predicate -> NAME . variables_lst
    (94) predicate -> NAME .
    (97) variables_lst -> . VARIABLE variables_lst
    (98) variables_lst -> . VARIABLE

    RPAREN          reduce using rule 94 (predicate -> NAME .)
    AND_KEY         reduce using rule 94 (predicate -> NAME .)
    OR_KEY          reduce using rule 94 (predicate -> NAME .)
    NOT_KEY         reduce using rule 94 (predicate -> NAME .)
    IMPLY_KEY       reduce using rule 94 (predicate -> NAME .)
    EXISTS_KEY      reduce using rule 94 (predicate -> NAME .)
    FORALL_KEY      reduce using rule 94 (predicate -> NAME .)
    LPAREN          reduce using rule 94 (predicate -> NAME .)
    NAME            reduce using rule 94 (predicate -> NAME .)
    EQUALS          reduce using rule 94 (predicate -> NAME .)
    ONEOF_KEY       reduce using rule 94 (predicate -> NAME .)
    WHEN_KEY        reduce using rule 94 (predicate -> NAME .)
    VARIABLE        shift and go to state 82

    variables_lst                  shift and go to state 168

state 135

    (93) predicate -> EQUALS . VARIABLE VARIABLE

    VARIABLE        shift and go to state 169


state 136

    (47) parameters_def -> PARAMETERS_KEY LPAREN typed_variables_lst RPAREN .

    PRECONDITION_KEY reduce using rule 47 (parameters_def -> PARAMETERS_KEY LPAREN typed_variables_lst RPAREN .)


state 137

    (42) typed_constants_lst -> constants_lst HYPHEN type typed_constants_lst .

    RPAREN          reduce using rule 42 (typed_constants_lst -> constants_lst HYPHEN type typed_constants_lst .)


state 138

    (13) init_def -> LPAREN INIT_KEY LPAREN AND_KEY ground_predicates_lst . RPAREN RPAREN

    RPAREN          shift and go to state 170


state 139

    (38) ground_predicate -> LPAREN NAME RPAREN .

    LPAREN          reduce using rule 38 (ground_predicate -> LPAREN NAME RPAREN .)
    RPAREN          reduce using rule 38 (ground_predicate -> LPAREN NAME RPAREN .)


state 140

    (39) ground_predicate -> LPAREN NAME constants_lst . RPAREN

    RPAREN          shift and go to state 171


state 141

    (15) goal_def -> LPAREN GOAL_KEY LPAREN AND_KEY . ground_predicates_lst RPAREN RPAREN
    (36) ground_predicates_lst -> . ground_predicate ground_predicates_lst
    (37) ground_predicates_lst -> . ground_predicate
    (38) ground_predicate -> . LPAREN NAME RPAREN
    (39) ground_predicate -> . LPAREN NAME constants_lst RPAREN

    LPAREN          shift and go to state 118

    ground_predicates_lst          shift and go to state 172
    ground_predicate               shift and go to state 98

state 142

    (16) goal_def -> LPAREN GOAL_KEY ground_predicate RPAREN .

    RPAREN          reduce using rule 16 (goal_def -> LPAREN GOAL_KEY ground_predicate RPAREN .)


state 143

    (95) typed_variables_lst -> variables_lst HYPHEN type typed_variables_lst .

    RPAREN          reduce using rule 95 (typed_variables_lst -> variables_lst HYPHEN type typed_variables_lst .)


state 144

    (72) one_eff_formula -> LPAREN . ONEOF_KEY atomic_eff_lst RPAREN
    (73) one_eff_formula -> LPAREN . WHEN_KEY formula atomic_eff RPAREN
    (74) one_eff_formula -> LPAREN . FORALL_KEY LPAREN typed_variables_lst RPAREN atomic_eff RPAREN
    (75) one_eff_formula -> LPAREN . FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN
    (87) literal -> LPAREN . NOT_KEY predicate RPAREN
    (89) predicate -> LPAREN . NAME variables_lst RPAREN
    (90) predicate -> LPAREN . EQUALS VARIABLE VARIABLE RPAREN
    (91) predicate -> LPAREN . NAME RPAREN

    ONEOF_KEY       shift and go to state 173
    WHEN_KEY        shift and go to state 174
    FORALL_KEY      shift and go to state 175
    NOT_KEY         shift and go to state 176
    NAME            shift and go to state 177
    EQUALS          shift and go to state 178


state 145

    (66) effects_def -> EFFECT_KEY LPAREN one_eff_formula . RPAREN

    RPAREN          shift and go to state 179


state 146

    (67) one_eff_formula -> literal .

    RPAREN          reduce using rule 67 (one_eff_formula -> literal .)
    AND_KEY         reduce using rule 67 (one_eff_formula -> literal .)
    ONEOF_KEY       reduce using rule 67 (one_eff_formula -> literal .)
    WHEN_KEY        reduce using rule 67 (one_eff_formula -> literal .)
    LPAREN          reduce using rule 67 (one_eff_formula -> literal .)
    NAME            reduce using rule 67 (one_eff_formula -> literal .)
    EQUALS          reduce using rule 67 (one_eff_formula -> literal .)


state 147

    (68) one_eff_formula -> AND_KEY .
    (69) one_eff_formula -> AND_KEY . one_eff_formula_lst
    (76) one_eff_formula_lst -> . one_eff_formula one_eff_formula_lst
    (77) one_eff_formula_lst -> . one_eff_formula
    (67) one_eff_formula -> . literal
    (68) one_eff_formula -> . AND_KEY
    (69) one_eff_formula -> . AND_KEY one_eff_formula_lst
    (70) one_eff_formula -> . ONEOF_KEY atomic_eff_lst
    (71) one_eff_formula -> . WHEN_KEY formula atomic_eff
    (72) one_eff_formula -> . LPAREN ONEOF_KEY atomic_eff_lst RPAREN
    (73) one_eff_formula -> . LPAREN WHEN_KEY formula atomic_eff RPAREN
    (74) one_eff_formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN atomic_eff RPAREN
    (75) one_eff_formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN
    (87) literal -> . LPAREN NOT_KEY predicate RPAREN
    (88) literal -> . predicate
    (89) predicate -> . LPAREN NAME variables_lst RPAREN
    (90) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (91) predicate -> . LPAREN NAME RPAREN
    (92) predicate -> . NAME variables_lst
    (93) predicate -> . EQUALS VARIABLE VARIABLE
    (94) predicate -> . NAME

  ! shift/reduce conflict for AND_KEY resolved as shift
  ! shift/reduce conflict for ONEOF_KEY resolved as shift
  ! shift/reduce conflict for WHEN_KEY resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
    RPAREN          reduce using rule 68 (one_eff_formula -> AND_KEY .)
    AND_KEY         shift and go to state 147
    ONEOF_KEY       shift and go to state 148
    WHEN_KEY        shift and go to state 149
    LPAREN          shift and go to state 144
    NAME            shift and go to state 134
    EQUALS          shift and go to state 135

  ! AND_KEY         [ reduce using rule 68 (one_eff_formula -> AND_KEY .) ]
  ! ONEOF_KEY       [ reduce using rule 68 (one_eff_formula -> AND_KEY .) ]
  ! WHEN_KEY        [ reduce using rule 68 (one_eff_formula -> AND_KEY .) ]
  ! LPAREN          [ reduce using rule 68 (one_eff_formula -> AND_KEY .) ]
  ! NAME            [ reduce using rule 68 (one_eff_formula -> AND_KEY .) ]
  ! EQUALS          [ reduce using rule 68 (one_eff_formula -> AND_KEY .) ]

    one_eff_formula_lst            shift and go to state 180
    one_eff_formula                shift and go to state 181
    literal                        shift and go to state 146
    predicate                      shift and go to state 133

state 148

    (70) one_eff_formula -> ONEOF_KEY . atomic_eff_lst
    (78) atomic_eff_lst -> . atomic_eff atomic_eff_lst
    (79) atomic_eff_lst -> . atomic_eff
    (80) atomic_eff -> . literal
    (81) atomic_eff -> . AND_KEY literal_lst
    (82) atomic_eff -> . LPAREN AND_KEY RPAREN
    (83) atomic_eff -> . LPAREN AND_KEY literal_lst RPAREN
    (84) atomic_eff -> . LPAREN WHEN_KEY formula atomic_eff RPAREN
    (87) literal -> . LPAREN NOT_KEY predicate RPAREN
    (88) literal -> . predicate
    (89) predicate -> . LPAREN NAME variables_lst RPAREN
    (90) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (91) predicate -> . LPAREN NAME RPAREN
    (92) predicate -> . NAME variables_lst
    (93) predicate -> . EQUALS VARIABLE VARIABLE
    (94) predicate -> . NAME

    AND_KEY         shift and go to state 185
    LPAREN          shift and go to state 186
    NAME            shift and go to state 134
    EQUALS          shift and go to state 135

    atomic_eff_lst                 shift and go to state 182
    atomic_eff                     shift and go to state 183
    literal                        shift and go to state 184
    predicate                      shift and go to state 133

state 149

    (71) one_eff_formula -> WHEN_KEY . formula atomic_eff
    (50) formula -> . literal
    (51) formula -> . AND_KEY formula_lst
    (52) formula -> . OR_KEY formula_lst
    (53) formula -> . NOT_KEY formula
    (54) formula -> . IMPLY_KEY formula formula
    (55) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (56) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (57) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (58) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (59) formula -> . LPAREN NOT_KEY formula RPAREN
    (60) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (61) formula -> . LPAREN literal RPAREN
    (62) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (63) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (87) literal -> . LPAREN NOT_KEY predicate RPAREN
    (88) literal -> . predicate
    (89) predicate -> . LPAREN NAME variables_lst RPAREN
    (90) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (91) predicate -> . LPAREN NAME RPAREN
    (92) predicate -> . NAME variables_lst
    (93) predicate -> . EQUALS VARIABLE VARIABLE
    (94) predicate -> . NAME

    AND_KEY         shift and go to state 127
    OR_KEY          shift and go to state 128
    NOT_KEY         shift and go to state 129
    IMPLY_KEY       shift and go to state 130
    EXISTS_KEY      shift and go to state 131
    FORALL_KEY      shift and go to state 132
    LPAREN          shift and go to state 124
    NAME            shift and go to state 134
    EQUALS          shift and go to state 135

    formula                        shift and go to state 187
    literal                        shift and go to state 126
    predicate                      shift and go to state 133

state 150

    (87) literal -> LPAREN . NOT_KEY predicate RPAREN
    (89) predicate -> LPAREN . NAME variables_lst RPAREN
    (90) predicate -> LPAREN . EQUALS VARIABLE VARIABLE RPAREN
    (91) predicate -> LPAREN . NAME RPAREN

    NOT_KEY         shift and go to state 176
    NAME            shift and go to state 177
    EQUALS          shift and go to state 178


state 151

    (57) formula -> LPAREN AND_KEY . formula_lst RPAREN
    (64) formula_lst -> . formula formula_lst
    (65) formula_lst -> . formula
    (50) formula -> . literal
    (51) formula -> . AND_KEY formula_lst
    (52) formula -> . OR_KEY formula_lst
    (53) formula -> . NOT_KEY formula
    (54) formula -> . IMPLY_KEY formula formula
    (55) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (56) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (57) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (58) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (59) formula -> . LPAREN NOT_KEY formula RPAREN
    (60) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (61) formula -> . LPAREN literal RPAREN
    (62) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (63) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (87) literal -> . LPAREN NOT_KEY predicate RPAREN
    (88) literal -> . predicate
    (89) predicate -> . LPAREN NAME variables_lst RPAREN
    (90) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (91) predicate -> . LPAREN NAME RPAREN
    (92) predicate -> . NAME variables_lst
    (93) predicate -> . EQUALS VARIABLE VARIABLE
    (94) predicate -> . NAME

    AND_KEY         shift and go to state 127
    OR_KEY          shift and go to state 128
    NOT_KEY         shift and go to state 129
    IMPLY_KEY       shift and go to state 130
    EXISTS_KEY      shift and go to state 131
    FORALL_KEY      shift and go to state 132
    LPAREN          shift and go to state 124
    NAME            shift and go to state 134
    EQUALS          shift and go to state 135

    formula_lst                    shift and go to state 188
    formula                        shift and go to state 162
    literal                        shift and go to state 126
    predicate                      shift and go to state 133

state 152

    (58) formula -> LPAREN OR_KEY . formula_lst RPAREN
    (64) formula_lst -> . formula formula_lst
    (65) formula_lst -> . formula
    (50) formula -> . literal
    (51) formula -> . AND_KEY formula_lst
    (52) formula -> . OR_KEY formula_lst
    (53) formula -> . NOT_KEY formula
    (54) formula -> . IMPLY_KEY formula formula
    (55) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (56) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (57) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (58) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (59) formula -> . LPAREN NOT_KEY formula RPAREN
    (60) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (61) formula -> . LPAREN literal RPAREN
    (62) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (63) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (87) literal -> . LPAREN NOT_KEY predicate RPAREN
    (88) literal -> . predicate
    (89) predicate -> . LPAREN NAME variables_lst RPAREN
    (90) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (91) predicate -> . LPAREN NAME RPAREN
    (92) predicate -> . NAME variables_lst
    (93) predicate -> . EQUALS VARIABLE VARIABLE
    (94) predicate -> . NAME

    AND_KEY         shift and go to state 127
    OR_KEY          shift and go to state 128
    NOT_KEY         shift and go to state 129
    IMPLY_KEY       shift and go to state 130
    EXISTS_KEY      shift and go to state 131
    FORALL_KEY      shift and go to state 132
    LPAREN          shift and go to state 124
    NAME            shift and go to state 134
    EQUALS          shift and go to state 135

    formula_lst                    shift and go to state 189
    formula                        shift and go to state 162
    literal                        shift and go to state 126
    predicate                      shift and go to state 133

state 153

    (59) formula -> LPAREN NOT_KEY . formula RPAREN
    (87) literal -> LPAREN NOT_KEY . predicate RPAREN
    (50) formula -> . literal
    (51) formula -> . AND_KEY formula_lst
    (52) formula -> . OR_KEY formula_lst
    (53) formula -> . NOT_KEY formula
    (54) formula -> . IMPLY_KEY formula formula
    (55) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (56) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (57) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (58) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (59) formula -> . LPAREN NOT_KEY formula RPAREN
    (60) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (61) formula -> . LPAREN literal RPAREN
    (62) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (63) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (89) predicate -> . LPAREN NAME variables_lst RPAREN
    (90) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (91) predicate -> . LPAREN NAME RPAREN
    (92) predicate -> . NAME variables_lst
    (93) predicate -> . EQUALS VARIABLE VARIABLE
    (94) predicate -> . NAME
    (87) literal -> . LPAREN NOT_KEY predicate RPAREN
    (88) literal -> . predicate

    AND_KEY         shift and go to state 127
    OR_KEY          shift and go to state 128
    NOT_KEY         shift and go to state 129
    IMPLY_KEY       shift and go to state 130
    EXISTS_KEY      shift and go to state 131
    FORALL_KEY      shift and go to state 132
    LPAREN          shift and go to state 190
    NAME            shift and go to state 134
    EQUALS          shift and go to state 135

    formula                        shift and go to state 191
    predicate                      shift and go to state 192
    literal                        shift and go to state 126

state 154

    (60) formula -> LPAREN IMPLY_KEY . formula formula RPAREN
    (50) formula -> . literal
    (51) formula -> . AND_KEY formula_lst
    (52) formula -> . OR_KEY formula_lst
    (53) formula -> . NOT_KEY formula
    (54) formula -> . IMPLY_KEY formula formula
    (55) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (56) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (57) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (58) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (59) formula -> . LPAREN NOT_KEY formula RPAREN
    (60) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (61) formula -> . LPAREN literal RPAREN
    (62) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (63) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (87) literal -> . LPAREN NOT_KEY predicate RPAREN
    (88) literal -> . predicate
    (89) predicate -> . LPAREN NAME variables_lst RPAREN
    (90) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (91) predicate -> . LPAREN NAME RPAREN
    (92) predicate -> . NAME variables_lst
    (93) predicate -> . EQUALS VARIABLE VARIABLE
    (94) predicate -> . NAME

    AND_KEY         shift and go to state 127
    OR_KEY          shift and go to state 128
    NOT_KEY         shift and go to state 129
    IMPLY_KEY       shift and go to state 130
    EXISTS_KEY      shift and go to state 131
    FORALL_KEY      shift and go to state 132
    LPAREN          shift and go to state 124
    NAME            shift and go to state 134
    EQUALS          shift and go to state 135

    formula                        shift and go to state 193
    literal                        shift and go to state 126
    predicate                      shift and go to state 133

state 155

    (61) formula -> LPAREN literal . RPAREN

    RPAREN          shift and go to state 194


state 156

    (62) formula -> LPAREN EXISTS_KEY . LPAREN typed_variables_lst RPAREN formula RPAREN

    LPAREN          shift and go to state 195


state 157

    (63) formula -> LPAREN FORALL_KEY . LPAREN typed_variables_lst RPAREN formula RPAREN

    LPAREN          shift and go to state 196


state 158

    (89) predicate -> LPAREN NAME . variables_lst RPAREN
    (91) predicate -> LPAREN NAME . RPAREN
    (92) predicate -> NAME . variables_lst
    (94) predicate -> NAME .
    (97) variables_lst -> . VARIABLE variables_lst
    (98) variables_lst -> . VARIABLE

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 198
    VARIABLE        shift and go to state 82

  ! RPAREN          [ reduce using rule 94 (predicate -> NAME .) ]

    variables_lst                  shift and go to state 197

state 159

    (90) predicate -> LPAREN EQUALS . VARIABLE VARIABLE RPAREN
    (93) predicate -> EQUALS . VARIABLE VARIABLE

    VARIABLE        shift and go to state 199


state 160

    (49) precond_def -> PRECONDITION_KEY LPAREN formula RPAREN .

    EFFECT_KEY      reduce using rule 49 (precond_def -> PRECONDITION_KEY LPAREN formula RPAREN .)


state 161

    (51) formula -> AND_KEY formula_lst .

    RPAREN          reduce using rule 51 (formula -> AND_KEY formula_lst .)
    AND_KEY         reduce using rule 51 (formula -> AND_KEY formula_lst .)
    OR_KEY          reduce using rule 51 (formula -> AND_KEY formula_lst .)
    NOT_KEY         reduce using rule 51 (formula -> AND_KEY formula_lst .)
    IMPLY_KEY       reduce using rule 51 (formula -> AND_KEY formula_lst .)
    EXISTS_KEY      reduce using rule 51 (formula -> AND_KEY formula_lst .)
    FORALL_KEY      reduce using rule 51 (formula -> AND_KEY formula_lst .)
    LPAREN          reduce using rule 51 (formula -> AND_KEY formula_lst .)
    NAME            reduce using rule 51 (formula -> AND_KEY formula_lst .)
    EQUALS          reduce using rule 51 (formula -> AND_KEY formula_lst .)


state 162

    (64) formula_lst -> formula . formula_lst
    (65) formula_lst -> formula .
    (64) formula_lst -> . formula formula_lst
    (65) formula_lst -> . formula
    (50) formula -> . literal
    (51) formula -> . AND_KEY formula_lst
    (52) formula -> . OR_KEY formula_lst
    (53) formula -> . NOT_KEY formula
    (54) formula -> . IMPLY_KEY formula formula
    (55) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (56) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (57) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (58) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (59) formula -> . LPAREN NOT_KEY formula RPAREN
    (60) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (61) formula -> . LPAREN literal RPAREN
    (62) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (63) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (87) literal -> . LPAREN NOT_KEY predicate RPAREN
    (88) literal -> . predicate
    (89) predicate -> . LPAREN NAME variables_lst RPAREN
    (90) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (91) predicate -> . LPAREN NAME RPAREN
    (92) predicate -> . NAME variables_lst
    (93) predicate -> . EQUALS VARIABLE VARIABLE
    (94) predicate -> . NAME

  ! shift/reduce conflict for AND_KEY resolved as shift
  ! shift/reduce conflict for OR_KEY resolved as shift
  ! shift/reduce conflict for NOT_KEY resolved as shift
  ! shift/reduce conflict for IMPLY_KEY resolved as shift
  ! shift/reduce conflict for EXISTS_KEY resolved as shift
  ! shift/reduce conflict for FORALL_KEY resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
    RPAREN          reduce using rule 65 (formula_lst -> formula .)
    AND_KEY         shift and go to state 127
    OR_KEY          shift and go to state 128
    NOT_KEY         shift and go to state 129
    IMPLY_KEY       shift and go to state 130
    EXISTS_KEY      shift and go to state 131
    FORALL_KEY      shift and go to state 132
    LPAREN          shift and go to state 124
    NAME            shift and go to state 134
    EQUALS          shift and go to state 135

  ! AND_KEY         [ reduce using rule 65 (formula_lst -> formula .) ]
  ! OR_KEY          [ reduce using rule 65 (formula_lst -> formula .) ]
  ! NOT_KEY         [ reduce using rule 65 (formula_lst -> formula .) ]
  ! IMPLY_KEY       [ reduce using rule 65 (formula_lst -> formula .) ]
  ! EXISTS_KEY      [ reduce using rule 65 (formula_lst -> formula .) ]
  ! FORALL_KEY      [ reduce using rule 65 (formula_lst -> formula .) ]
  ! LPAREN          [ reduce using rule 65 (formula_lst -> formula .) ]
  ! NAME            [ reduce using rule 65 (formula_lst -> formula .) ]
  ! EQUALS          [ reduce using rule 65 (formula_lst -> formula .) ]

    formula                        shift and go to state 162
    formula_lst                    shift and go to state 200
    literal                        shift and go to state 126
    predicate                      shift and go to state 133

state 163

    (52) formula -> OR_KEY formula_lst .

    RPAREN          reduce using rule 52 (formula -> OR_KEY formula_lst .)
    AND_KEY         reduce using rule 52 (formula -> OR_KEY formula_lst .)
    OR_KEY          reduce using rule 52 (formula -> OR_KEY formula_lst .)
    NOT_KEY         reduce using rule 52 (formula -> OR_KEY formula_lst .)
    IMPLY_KEY       reduce using rule 52 (formula -> OR_KEY formula_lst .)
    EXISTS_KEY      reduce using rule 52 (formula -> OR_KEY formula_lst .)
    FORALL_KEY      reduce using rule 52 (formula -> OR_KEY formula_lst .)
    LPAREN          reduce using rule 52 (formula -> OR_KEY formula_lst .)
    NAME            reduce using rule 52 (formula -> OR_KEY formula_lst .)
    EQUALS          reduce using rule 52 (formula -> OR_KEY formula_lst .)


state 164

    (53) formula -> NOT_KEY formula .

    RPAREN          reduce using rule 53 (formula -> NOT_KEY formula .)
    AND_KEY         reduce using rule 53 (formula -> NOT_KEY formula .)
    OR_KEY          reduce using rule 53 (formula -> NOT_KEY formula .)
    NOT_KEY         reduce using rule 53 (formula -> NOT_KEY formula .)
    IMPLY_KEY       reduce using rule 53 (formula -> NOT_KEY formula .)
    EXISTS_KEY      reduce using rule 53 (formula -> NOT_KEY formula .)
    FORALL_KEY      reduce using rule 53 (formula -> NOT_KEY formula .)
    LPAREN          reduce using rule 53 (formula -> NOT_KEY formula .)
    NAME            reduce using rule 53 (formula -> NOT_KEY formula .)
    EQUALS          reduce using rule 53 (formula -> NOT_KEY formula .)


state 165

    (54) formula -> IMPLY_KEY formula . formula
    (50) formula -> . literal
    (51) formula -> . AND_KEY formula_lst
    (52) formula -> . OR_KEY formula_lst
    (53) formula -> . NOT_KEY formula
    (54) formula -> . IMPLY_KEY formula formula
    (55) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (56) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (57) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (58) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (59) formula -> . LPAREN NOT_KEY formula RPAREN
    (60) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (61) formula -> . LPAREN literal RPAREN
    (62) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (63) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (87) literal -> . LPAREN NOT_KEY predicate RPAREN
    (88) literal -> . predicate
    (89) predicate -> . LPAREN NAME variables_lst RPAREN
    (90) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (91) predicate -> . LPAREN NAME RPAREN
    (92) predicate -> . NAME variables_lst
    (93) predicate -> . EQUALS VARIABLE VARIABLE
    (94) predicate -> . NAME

    AND_KEY         shift and go to state 127
    OR_KEY          shift and go to state 128
    NOT_KEY         shift and go to state 129
    IMPLY_KEY       shift and go to state 130
    EXISTS_KEY      shift and go to state 131
    FORALL_KEY      shift and go to state 132
    LPAREN          shift and go to state 124
    NAME            shift and go to state 134
    EQUALS          shift and go to state 135

    formula                        shift and go to state 201
    literal                        shift and go to state 126
    predicate                      shift and go to state 133

state 166

    (55) formula -> EXISTS_KEY LPAREN . typed_variables_lst RPAREN formula
    (95) typed_variables_lst -> . variables_lst HYPHEN type typed_variables_lst
    (96) typed_variables_lst -> . variables_lst HYPHEN type
    (97) variables_lst -> . VARIABLE variables_lst
    (98) variables_lst -> . VARIABLE

    VARIABLE        shift and go to state 82

    typed_variables_lst            shift and go to state 202
    variables_lst                  shift and go to state 81

state 167

    (56) formula -> FORALL_KEY LPAREN . typed_variables_lst RPAREN formula
    (95) typed_variables_lst -> . variables_lst HYPHEN type typed_variables_lst
    (96) typed_variables_lst -> . variables_lst HYPHEN type
    (97) variables_lst -> . VARIABLE variables_lst
    (98) variables_lst -> . VARIABLE

    VARIABLE        shift and go to state 82

    typed_variables_lst            shift and go to state 203
    variables_lst                  shift and go to state 81

state 168

    (92) predicate -> NAME variables_lst .

    RPAREN          reduce using rule 92 (predicate -> NAME variables_lst .)
    AND_KEY         reduce using rule 92 (predicate -> NAME variables_lst .)
    OR_KEY          reduce using rule 92 (predicate -> NAME variables_lst .)
    NOT_KEY         reduce using rule 92 (predicate -> NAME variables_lst .)
    IMPLY_KEY       reduce using rule 92 (predicate -> NAME variables_lst .)
    EXISTS_KEY      reduce using rule 92 (predicate -> NAME variables_lst .)
    FORALL_KEY      reduce using rule 92 (predicate -> NAME variables_lst .)
    LPAREN          reduce using rule 92 (predicate -> NAME variables_lst .)
    NAME            reduce using rule 92 (predicate -> NAME variables_lst .)
    EQUALS          reduce using rule 92 (predicate -> NAME variables_lst .)
    ONEOF_KEY       reduce using rule 92 (predicate -> NAME variables_lst .)
    WHEN_KEY        reduce using rule 92 (predicate -> NAME variables_lst .)


state 169

    (93) predicate -> EQUALS VARIABLE . VARIABLE

    VARIABLE        shift and go to state 204


state 170

    (13) init_def -> LPAREN INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN . RPAREN

    RPAREN          shift and go to state 205


state 171

    (39) ground_predicate -> LPAREN NAME constants_lst RPAREN .

    LPAREN          reduce using rule 39 (ground_predicate -> LPAREN NAME constants_lst RPAREN .)
    RPAREN          reduce using rule 39 (ground_predicate -> LPAREN NAME constants_lst RPAREN .)


state 172

    (15) goal_def -> LPAREN GOAL_KEY LPAREN AND_KEY ground_predicates_lst . RPAREN RPAREN

    RPAREN          shift and go to state 206


state 173

    (72) one_eff_formula -> LPAREN ONEOF_KEY . atomic_eff_lst RPAREN
    (78) atomic_eff_lst -> . atomic_eff atomic_eff_lst
    (79) atomic_eff_lst -> . atomic_eff
    (80) atomic_eff -> . literal
    (81) atomic_eff -> . AND_KEY literal_lst
    (82) atomic_eff -> . LPAREN AND_KEY RPAREN
    (83) atomic_eff -> . LPAREN AND_KEY literal_lst RPAREN
    (84) atomic_eff -> . LPAREN WHEN_KEY formula atomic_eff RPAREN
    (87) literal -> . LPAREN NOT_KEY predicate RPAREN
    (88) literal -> . predicate
    (89) predicate -> . LPAREN NAME variables_lst RPAREN
    (90) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (91) predicate -> . LPAREN NAME RPAREN
    (92) predicate -> . NAME variables_lst
    (93) predicate -> . EQUALS VARIABLE VARIABLE
    (94) predicate -> . NAME

    AND_KEY         shift and go to state 185
    LPAREN          shift and go to state 186
    NAME            shift and go to state 134
    EQUALS          shift and go to state 135

    atomic_eff_lst                 shift and go to state 207
    atomic_eff                     shift and go to state 183
    literal                        shift and go to state 184
    predicate                      shift and go to state 133

state 174

    (73) one_eff_formula -> LPAREN WHEN_KEY . formula atomic_eff RPAREN
    (50) formula -> . literal
    (51) formula -> . AND_KEY formula_lst
    (52) formula -> . OR_KEY formula_lst
    (53) formula -> . NOT_KEY formula
    (54) formula -> . IMPLY_KEY formula formula
    (55) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (56) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (57) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (58) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (59) formula -> . LPAREN NOT_KEY formula RPAREN
    (60) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (61) formula -> . LPAREN literal RPAREN
    (62) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (63) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (87) literal -> . LPAREN NOT_KEY predicate RPAREN
    (88) literal -> . predicate
    (89) predicate -> . LPAREN NAME variables_lst RPAREN
    (90) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (91) predicate -> . LPAREN NAME RPAREN
    (92) predicate -> . NAME variables_lst
    (93) predicate -> . EQUALS VARIABLE VARIABLE
    (94) predicate -> . NAME

    AND_KEY         shift and go to state 127
    OR_KEY          shift and go to state 128
    NOT_KEY         shift and go to state 129
    IMPLY_KEY       shift and go to state 130
    EXISTS_KEY      shift and go to state 131
    FORALL_KEY      shift and go to state 132
    LPAREN          shift and go to state 124
    NAME            shift and go to state 134
    EQUALS          shift and go to state 135

    formula                        shift and go to state 208
    literal                        shift and go to state 126
    predicate                      shift and go to state 133

state 175

    (74) one_eff_formula -> LPAREN FORALL_KEY . LPAREN typed_variables_lst RPAREN atomic_eff RPAREN
    (75) one_eff_formula -> LPAREN FORALL_KEY . LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN

    LPAREN          shift and go to state 209


state 176

    (87) literal -> LPAREN NOT_KEY . predicate RPAREN
    (89) predicate -> . LPAREN NAME variables_lst RPAREN
    (90) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (91) predicate -> . LPAREN NAME RPAREN
    (92) predicate -> . NAME variables_lst
    (93) predicate -> . EQUALS VARIABLE VARIABLE
    (94) predicate -> . NAME

    LPAREN          shift and go to state 210
    NAME            shift and go to state 134
    EQUALS          shift and go to state 135

    predicate                      shift and go to state 211

state 177

    (89) predicate -> LPAREN NAME . variables_lst RPAREN
    (91) predicate -> LPAREN NAME . RPAREN
    (97) variables_lst -> . VARIABLE variables_lst
    (98) variables_lst -> . VARIABLE

    RPAREN          shift and go to state 198
    VARIABLE        shift and go to state 82

    variables_lst                  shift and go to state 212

state 178

    (90) predicate -> LPAREN EQUALS . VARIABLE VARIABLE RPAREN

    VARIABLE        shift and go to state 213


state 179

    (66) effects_def -> EFFECT_KEY LPAREN one_eff_formula RPAREN .

    RPAREN          reduce using rule 66 (effects_def -> EFFECT_KEY LPAREN one_eff_formula RPAREN .)


state 180

    (69) one_eff_formula -> AND_KEY one_eff_formula_lst .

    RPAREN          reduce using rule 69 (one_eff_formula -> AND_KEY one_eff_formula_lst .)
    AND_KEY         reduce using rule 69 (one_eff_formula -> AND_KEY one_eff_formula_lst .)
    ONEOF_KEY       reduce using rule 69 (one_eff_formula -> AND_KEY one_eff_formula_lst .)
    WHEN_KEY        reduce using rule 69 (one_eff_formula -> AND_KEY one_eff_formula_lst .)
    LPAREN          reduce using rule 69 (one_eff_formula -> AND_KEY one_eff_formula_lst .)
    NAME            reduce using rule 69 (one_eff_formula -> AND_KEY one_eff_formula_lst .)
    EQUALS          reduce using rule 69 (one_eff_formula -> AND_KEY one_eff_formula_lst .)


state 181

    (76) one_eff_formula_lst -> one_eff_formula . one_eff_formula_lst
    (77) one_eff_formula_lst -> one_eff_formula .
    (76) one_eff_formula_lst -> . one_eff_formula one_eff_formula_lst
    (77) one_eff_formula_lst -> . one_eff_formula
    (67) one_eff_formula -> . literal
    (68) one_eff_formula -> . AND_KEY
    (69) one_eff_formula -> . AND_KEY one_eff_formula_lst
    (70) one_eff_formula -> . ONEOF_KEY atomic_eff_lst
    (71) one_eff_formula -> . WHEN_KEY formula atomic_eff
    (72) one_eff_formula -> . LPAREN ONEOF_KEY atomic_eff_lst RPAREN
    (73) one_eff_formula -> . LPAREN WHEN_KEY formula atomic_eff RPAREN
    (74) one_eff_formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN atomic_eff RPAREN
    (75) one_eff_formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN
    (87) literal -> . LPAREN NOT_KEY predicate RPAREN
    (88) literal -> . predicate
    (89) predicate -> . LPAREN NAME variables_lst RPAREN
    (90) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (91) predicate -> . LPAREN NAME RPAREN
    (92) predicate -> . NAME variables_lst
    (93) predicate -> . EQUALS VARIABLE VARIABLE
    (94) predicate -> . NAME

  ! shift/reduce conflict for AND_KEY resolved as shift
  ! shift/reduce conflict for ONEOF_KEY resolved as shift
  ! shift/reduce conflict for WHEN_KEY resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
    RPAREN          reduce using rule 77 (one_eff_formula_lst -> one_eff_formula .)
    AND_KEY         shift and go to state 147
    ONEOF_KEY       shift and go to state 148
    WHEN_KEY        shift and go to state 149
    LPAREN          shift and go to state 144
    NAME            shift and go to state 134
    EQUALS          shift and go to state 135

  ! AND_KEY         [ reduce using rule 77 (one_eff_formula_lst -> one_eff_formula .) ]
  ! ONEOF_KEY       [ reduce using rule 77 (one_eff_formula_lst -> one_eff_formula .) ]
  ! WHEN_KEY        [ reduce using rule 77 (one_eff_formula_lst -> one_eff_formula .) ]
  ! LPAREN          [ reduce using rule 77 (one_eff_formula_lst -> one_eff_formula .) ]
  ! NAME            [ reduce using rule 77 (one_eff_formula_lst -> one_eff_formula .) ]
  ! EQUALS          [ reduce using rule 77 (one_eff_formula_lst -> one_eff_formula .) ]

    one_eff_formula                shift and go to state 181
    one_eff_formula_lst            shift and go to state 214
    literal                        shift and go to state 146
    predicate                      shift and go to state 133

state 182

    (70) one_eff_formula -> ONEOF_KEY atomic_eff_lst .

    RPAREN          reduce using rule 70 (one_eff_formula -> ONEOF_KEY atomic_eff_lst .)
    AND_KEY         reduce using rule 70 (one_eff_formula -> ONEOF_KEY atomic_eff_lst .)
    ONEOF_KEY       reduce using rule 70 (one_eff_formula -> ONEOF_KEY atomic_eff_lst .)
    WHEN_KEY        reduce using rule 70 (one_eff_formula -> ONEOF_KEY atomic_eff_lst .)
    LPAREN          reduce using rule 70 (one_eff_formula -> ONEOF_KEY atomic_eff_lst .)
    NAME            reduce using rule 70 (one_eff_formula -> ONEOF_KEY atomic_eff_lst .)
    EQUALS          reduce using rule 70 (one_eff_formula -> ONEOF_KEY atomic_eff_lst .)


state 183

    (78) atomic_eff_lst -> atomic_eff . atomic_eff_lst
    (79) atomic_eff_lst -> atomic_eff .
    (78) atomic_eff_lst -> . atomic_eff atomic_eff_lst
    (79) atomic_eff_lst -> . atomic_eff
    (80) atomic_eff -> . literal
    (81) atomic_eff -> . AND_KEY literal_lst
    (82) atomic_eff -> . LPAREN AND_KEY RPAREN
    (83) atomic_eff -> . LPAREN AND_KEY literal_lst RPAREN
    (84) atomic_eff -> . LPAREN WHEN_KEY formula atomic_eff RPAREN
    (87) literal -> . LPAREN NOT_KEY predicate RPAREN
    (88) literal -> . predicate
    (89) predicate -> . LPAREN NAME variables_lst RPAREN
    (90) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (91) predicate -> . LPAREN NAME RPAREN
    (92) predicate -> . NAME variables_lst
    (93) predicate -> . EQUALS VARIABLE VARIABLE
    (94) predicate -> . NAME

  ! shift/reduce conflict for AND_KEY resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
    RPAREN          reduce using rule 79 (atomic_eff_lst -> atomic_eff .)
    ONEOF_KEY       reduce using rule 79 (atomic_eff_lst -> atomic_eff .)
    WHEN_KEY        reduce using rule 79 (atomic_eff_lst -> atomic_eff .)
    AND_KEY         shift and go to state 185
    LPAREN          shift and go to state 186
    NAME            shift and go to state 134
    EQUALS          shift and go to state 135

  ! AND_KEY         [ reduce using rule 79 (atomic_eff_lst -> atomic_eff .) ]
  ! LPAREN          [ reduce using rule 79 (atomic_eff_lst -> atomic_eff .) ]
  ! NAME            [ reduce using rule 79 (atomic_eff_lst -> atomic_eff .) ]
  ! EQUALS          [ reduce using rule 79 (atomic_eff_lst -> atomic_eff .) ]

    atomic_eff                     shift and go to state 183
    atomic_eff_lst                 shift and go to state 215
    literal                        shift and go to state 184
    predicate                      shift and go to state 133

state 184

    (80) atomic_eff -> literal .

    AND_KEY         reduce using rule 80 (atomic_eff -> literal .)
    LPAREN          reduce using rule 80 (atomic_eff -> literal .)
    NAME            reduce using rule 80 (atomic_eff -> literal .)
    EQUALS          reduce using rule 80 (atomic_eff -> literal .)
    RPAREN          reduce using rule 80 (atomic_eff -> literal .)
    ONEOF_KEY       reduce using rule 80 (atomic_eff -> literal .)
    WHEN_KEY        reduce using rule 80 (atomic_eff -> literal .)


state 185

    (81) atomic_eff -> AND_KEY . literal_lst
    (85) literal_lst -> . literal literal_lst
    (86) literal_lst -> . literal
    (87) literal -> . LPAREN NOT_KEY predicate RPAREN
    (88) literal -> . predicate
    (89) predicate -> . LPAREN NAME variables_lst RPAREN
    (90) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (91) predicate -> . LPAREN NAME RPAREN
    (92) predicate -> . NAME variables_lst
    (93) predicate -> . EQUALS VARIABLE VARIABLE
    (94) predicate -> . NAME

    LPAREN          shift and go to state 150
    NAME            shift and go to state 134
    EQUALS          shift and go to state 135

    literal_lst                    shift and go to state 216
    literal                        shift and go to state 217
    predicate                      shift and go to state 133

state 186

    (82) atomic_eff -> LPAREN . AND_KEY RPAREN
    (83) atomic_eff -> LPAREN . AND_KEY literal_lst RPAREN
    (84) atomic_eff -> LPAREN . WHEN_KEY formula atomic_eff RPAREN
    (87) literal -> LPAREN . NOT_KEY predicate RPAREN
    (89) predicate -> LPAREN . NAME variables_lst RPAREN
    (90) predicate -> LPAREN . EQUALS VARIABLE VARIABLE RPAREN
    (91) predicate -> LPAREN . NAME RPAREN

    AND_KEY         shift and go to state 218
    WHEN_KEY        shift and go to state 219
    NOT_KEY         shift and go to state 176
    NAME            shift and go to state 177
    EQUALS          shift and go to state 178


state 187

    (71) one_eff_formula -> WHEN_KEY formula . atomic_eff
    (80) atomic_eff -> . literal
    (81) atomic_eff -> . AND_KEY literal_lst
    (82) atomic_eff -> . LPAREN AND_KEY RPAREN
    (83) atomic_eff -> . LPAREN AND_KEY literal_lst RPAREN
    (84) atomic_eff -> . LPAREN WHEN_KEY formula atomic_eff RPAREN
    (87) literal -> . LPAREN NOT_KEY predicate RPAREN
    (88) literal -> . predicate
    (89) predicate -> . LPAREN NAME variables_lst RPAREN
    (90) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (91) predicate -> . LPAREN NAME RPAREN
    (92) predicate -> . NAME variables_lst
    (93) predicate -> . EQUALS VARIABLE VARIABLE
    (94) predicate -> . NAME

    AND_KEY         shift and go to state 185
    LPAREN          shift and go to state 186
    NAME            shift and go to state 134
    EQUALS          shift and go to state 135

    atomic_eff                     shift and go to state 220
    literal                        shift and go to state 184
    predicate                      shift and go to state 133

state 188

    (57) formula -> LPAREN AND_KEY formula_lst . RPAREN

    RPAREN          shift and go to state 221


state 189

    (58) formula -> LPAREN OR_KEY formula_lst . RPAREN

    RPAREN          shift and go to state 222


state 190

    (57) formula -> LPAREN . AND_KEY formula_lst RPAREN
    (58) formula -> LPAREN . OR_KEY formula_lst RPAREN
    (59) formula -> LPAREN . NOT_KEY formula RPAREN
    (60) formula -> LPAREN . IMPLY_KEY formula formula RPAREN
    (61) formula -> LPAREN . literal RPAREN
    (62) formula -> LPAREN . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (63) formula -> LPAREN . FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (89) predicate -> LPAREN . NAME variables_lst RPAREN
    (90) predicate -> LPAREN . EQUALS VARIABLE VARIABLE RPAREN
    (91) predicate -> LPAREN . NAME RPAREN
    (87) literal -> LPAREN . NOT_KEY predicate RPAREN
    (87) literal -> . LPAREN NOT_KEY predicate RPAREN
    (88) literal -> . predicate
    (89) predicate -> . LPAREN NAME variables_lst RPAREN
    (90) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (91) predicate -> . LPAREN NAME RPAREN
    (92) predicate -> . NAME variables_lst
    (93) predicate -> . EQUALS VARIABLE VARIABLE
    (94) predicate -> . NAME

    AND_KEY         shift and go to state 151
    OR_KEY          shift and go to state 152
    NOT_KEY         shift and go to state 153
    IMPLY_KEY       shift and go to state 154
    EXISTS_KEY      shift and go to state 156
    FORALL_KEY      shift and go to state 157
    NAME            shift and go to state 158
    EQUALS          shift and go to state 159
    LPAREN          shift and go to state 150

    literal                        shift and go to state 155
    predicate                      shift and go to state 133

state 191

    (59) formula -> LPAREN NOT_KEY formula . RPAREN

    RPAREN          shift and go to state 223


state 192

    (87) literal -> LPAREN NOT_KEY predicate . RPAREN
    (88) literal -> predicate .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 224

  ! RPAREN          [ reduce using rule 88 (literal -> predicate .) ]


state 193

    (60) formula -> LPAREN IMPLY_KEY formula . formula RPAREN
    (50) formula -> . literal
    (51) formula -> . AND_KEY formula_lst
    (52) formula -> . OR_KEY formula_lst
    (53) formula -> . NOT_KEY formula
    (54) formula -> . IMPLY_KEY formula formula
    (55) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (56) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (57) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (58) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (59) formula -> . LPAREN NOT_KEY formula RPAREN
    (60) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (61) formula -> . LPAREN literal RPAREN
    (62) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (63) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (87) literal -> . LPAREN NOT_KEY predicate RPAREN
    (88) literal -> . predicate
    (89) predicate -> . LPAREN NAME variables_lst RPAREN
    (90) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (91) predicate -> . LPAREN NAME RPAREN
    (92) predicate -> . NAME variables_lst
    (93) predicate -> . EQUALS VARIABLE VARIABLE
    (94) predicate -> . NAME

    AND_KEY         shift and go to state 127
    OR_KEY          shift and go to state 128
    NOT_KEY         shift and go to state 129
    IMPLY_KEY       shift and go to state 130
    EXISTS_KEY      shift and go to state 131
    FORALL_KEY      shift and go to state 132
    LPAREN          shift and go to state 124
    NAME            shift and go to state 134
    EQUALS          shift and go to state 135

    formula                        shift and go to state 225
    literal                        shift and go to state 126
    predicate                      shift and go to state 133

state 194

    (61) formula -> LPAREN literal RPAREN .

    RPAREN          reduce using rule 61 (formula -> LPAREN literal RPAREN .)
    AND_KEY         reduce using rule 61 (formula -> LPAREN literal RPAREN .)
    OR_KEY          reduce using rule 61 (formula -> LPAREN literal RPAREN .)
    NOT_KEY         reduce using rule 61 (formula -> LPAREN literal RPAREN .)
    IMPLY_KEY       reduce using rule 61 (formula -> LPAREN literal RPAREN .)
    EXISTS_KEY      reduce using rule 61 (formula -> LPAREN literal RPAREN .)
    FORALL_KEY      reduce using rule 61 (formula -> LPAREN literal RPAREN .)
    LPAREN          reduce using rule 61 (formula -> LPAREN literal RPAREN .)
    NAME            reduce using rule 61 (formula -> LPAREN literal RPAREN .)
    EQUALS          reduce using rule 61 (formula -> LPAREN literal RPAREN .)


state 195

    (62) formula -> LPAREN EXISTS_KEY LPAREN . typed_variables_lst RPAREN formula RPAREN
    (95) typed_variables_lst -> . variables_lst HYPHEN type typed_variables_lst
    (96) typed_variables_lst -> . variables_lst HYPHEN type
    (97) variables_lst -> . VARIABLE variables_lst
    (98) variables_lst -> . VARIABLE

    VARIABLE        shift and go to state 82

    typed_variables_lst            shift and go to state 226
    variables_lst                  shift and go to state 81

state 196

    (63) formula -> LPAREN FORALL_KEY LPAREN . typed_variables_lst RPAREN formula RPAREN
    (95) typed_variables_lst -> . variables_lst HYPHEN type typed_variables_lst
    (96) typed_variables_lst -> . variables_lst HYPHEN type
    (97) variables_lst -> . VARIABLE variables_lst
    (98) variables_lst -> . VARIABLE

    VARIABLE        shift and go to state 82

    typed_variables_lst            shift and go to state 227
    variables_lst                  shift and go to state 81

state 197

    (89) predicate -> LPAREN NAME variables_lst . RPAREN
    (92) predicate -> NAME variables_lst .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 228

  ! RPAREN          [ reduce using rule 92 (predicate -> NAME variables_lst .) ]


state 198

    (91) predicate -> LPAREN NAME RPAREN .

    RPAREN          reduce using rule 91 (predicate -> LPAREN NAME RPAREN .)
    AND_KEY         reduce using rule 91 (predicate -> LPAREN NAME RPAREN .)
    OR_KEY          reduce using rule 91 (predicate -> LPAREN NAME RPAREN .)
    NOT_KEY         reduce using rule 91 (predicate -> LPAREN NAME RPAREN .)
    IMPLY_KEY       reduce using rule 91 (predicate -> LPAREN NAME RPAREN .)
    EXISTS_KEY      reduce using rule 91 (predicate -> LPAREN NAME RPAREN .)
    FORALL_KEY      reduce using rule 91 (predicate -> LPAREN NAME RPAREN .)
    LPAREN          reduce using rule 91 (predicate -> LPAREN NAME RPAREN .)
    NAME            reduce using rule 91 (predicate -> LPAREN NAME RPAREN .)
    EQUALS          reduce using rule 91 (predicate -> LPAREN NAME RPAREN .)
    ONEOF_KEY       reduce using rule 91 (predicate -> LPAREN NAME RPAREN .)
    WHEN_KEY        reduce using rule 91 (predicate -> LPAREN NAME RPAREN .)


state 199

    (90) predicate -> LPAREN EQUALS VARIABLE . VARIABLE RPAREN
    (93) predicate -> EQUALS VARIABLE . VARIABLE

    VARIABLE        shift and go to state 229


state 200

    (64) formula_lst -> formula formula_lst .

    AND_KEY         reduce using rule 64 (formula_lst -> formula formula_lst .)
    OR_KEY          reduce using rule 64 (formula_lst -> formula formula_lst .)
    NOT_KEY         reduce using rule 64 (formula_lst -> formula formula_lst .)
    IMPLY_KEY       reduce using rule 64 (formula_lst -> formula formula_lst .)
    EXISTS_KEY      reduce using rule 64 (formula_lst -> formula formula_lst .)
    FORALL_KEY      reduce using rule 64 (formula_lst -> formula formula_lst .)
    LPAREN          reduce using rule 64 (formula_lst -> formula formula_lst .)
    NAME            reduce using rule 64 (formula_lst -> formula formula_lst .)
    EQUALS          reduce using rule 64 (formula_lst -> formula formula_lst .)
    RPAREN          reduce using rule 64 (formula_lst -> formula formula_lst .)


state 201

    (54) formula -> IMPLY_KEY formula formula .

    RPAREN          reduce using rule 54 (formula -> IMPLY_KEY formula formula .)
    AND_KEY         reduce using rule 54 (formula -> IMPLY_KEY formula formula .)
    OR_KEY          reduce using rule 54 (formula -> IMPLY_KEY formula formula .)
    NOT_KEY         reduce using rule 54 (formula -> IMPLY_KEY formula formula .)
    IMPLY_KEY       reduce using rule 54 (formula -> IMPLY_KEY formula formula .)
    EXISTS_KEY      reduce using rule 54 (formula -> IMPLY_KEY formula formula .)
    FORALL_KEY      reduce using rule 54 (formula -> IMPLY_KEY formula formula .)
    LPAREN          reduce using rule 54 (formula -> IMPLY_KEY formula formula .)
    NAME            reduce using rule 54 (formula -> IMPLY_KEY formula formula .)
    EQUALS          reduce using rule 54 (formula -> IMPLY_KEY formula formula .)


state 202

    (55) formula -> EXISTS_KEY LPAREN typed_variables_lst . RPAREN formula

    RPAREN          shift and go to state 230


state 203

    (56) formula -> FORALL_KEY LPAREN typed_variables_lst . RPAREN formula

    RPAREN          shift and go to state 231


state 204

    (93) predicate -> EQUALS VARIABLE VARIABLE .

    RPAREN          reduce using rule 93 (predicate -> EQUALS VARIABLE VARIABLE .)
    AND_KEY         reduce using rule 93 (predicate -> EQUALS VARIABLE VARIABLE .)
    OR_KEY          reduce using rule 93 (predicate -> EQUALS VARIABLE VARIABLE .)
    NOT_KEY         reduce using rule 93 (predicate -> EQUALS VARIABLE VARIABLE .)
    IMPLY_KEY       reduce using rule 93 (predicate -> EQUALS VARIABLE VARIABLE .)
    EXISTS_KEY      reduce using rule 93 (predicate -> EQUALS VARIABLE VARIABLE .)
    FORALL_KEY      reduce using rule 93 (predicate -> EQUALS VARIABLE VARIABLE .)
    LPAREN          reduce using rule 93 (predicate -> EQUALS VARIABLE VARIABLE .)
    NAME            reduce using rule 93 (predicate -> EQUALS VARIABLE VARIABLE .)
    EQUALS          reduce using rule 93 (predicate -> EQUALS VARIABLE VARIABLE .)
    ONEOF_KEY       reduce using rule 93 (predicate -> EQUALS VARIABLE VARIABLE .)
    WHEN_KEY        reduce using rule 93 (predicate -> EQUALS VARIABLE VARIABLE .)


state 205

    (13) init_def -> LPAREN INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN .

    LPAREN          reduce using rule 13 (init_def -> LPAREN INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN .)


state 206

    (15) goal_def -> LPAREN GOAL_KEY LPAREN AND_KEY ground_predicates_lst RPAREN . RPAREN

    RPAREN          shift and go to state 232


state 207

    (72) one_eff_formula -> LPAREN ONEOF_KEY atomic_eff_lst . RPAREN

    RPAREN          shift and go to state 233


state 208

    (73) one_eff_formula -> LPAREN WHEN_KEY formula . atomic_eff RPAREN
    (80) atomic_eff -> . literal
    (81) atomic_eff -> . AND_KEY literal_lst
    (82) atomic_eff -> . LPAREN AND_KEY RPAREN
    (83) atomic_eff -> . LPAREN AND_KEY literal_lst RPAREN
    (84) atomic_eff -> . LPAREN WHEN_KEY formula atomic_eff RPAREN
    (87) literal -> . LPAREN NOT_KEY predicate RPAREN
    (88) literal -> . predicate
    (89) predicate -> . LPAREN NAME variables_lst RPAREN
    (90) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (91) predicate -> . LPAREN NAME RPAREN
    (92) predicate -> . NAME variables_lst
    (93) predicate -> . EQUALS VARIABLE VARIABLE
    (94) predicate -> . NAME

    AND_KEY         shift and go to state 185
    LPAREN          shift and go to state 186
    NAME            shift and go to state 134
    EQUALS          shift and go to state 135

    atomic_eff                     shift and go to state 234
    literal                        shift and go to state 184
    predicate                      shift and go to state 133

state 209

    (74) one_eff_formula -> LPAREN FORALL_KEY LPAREN . typed_variables_lst RPAREN atomic_eff RPAREN
    (75) one_eff_formula -> LPAREN FORALL_KEY LPAREN . typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN
    (95) typed_variables_lst -> . variables_lst HYPHEN type typed_variables_lst
    (96) typed_variables_lst -> . variables_lst HYPHEN type
    (97) variables_lst -> . VARIABLE variables_lst
    (98) variables_lst -> . VARIABLE

    VARIABLE        shift and go to state 82

    typed_variables_lst            shift and go to state 235
    variables_lst                  shift and go to state 81

state 210

    (89) predicate -> LPAREN . NAME variables_lst RPAREN
    (90) predicate -> LPAREN . EQUALS VARIABLE VARIABLE RPAREN
    (91) predicate -> LPAREN . NAME RPAREN

    NAME            shift and go to state 177
    EQUALS          shift and go to state 178


state 211

    (87) literal -> LPAREN NOT_KEY predicate . RPAREN

    RPAREN          shift and go to state 224


state 212

    (89) predicate -> LPAREN NAME variables_lst . RPAREN

    RPAREN          shift and go to state 228


state 213

    (90) predicate -> LPAREN EQUALS VARIABLE . VARIABLE RPAREN

    VARIABLE        shift and go to state 236


state 214

    (76) one_eff_formula_lst -> one_eff_formula one_eff_formula_lst .

    AND_KEY         reduce using rule 76 (one_eff_formula_lst -> one_eff_formula one_eff_formula_lst .)
    ONEOF_KEY       reduce using rule 76 (one_eff_formula_lst -> one_eff_formula one_eff_formula_lst .)
    WHEN_KEY        reduce using rule 76 (one_eff_formula_lst -> one_eff_formula one_eff_formula_lst .)
    LPAREN          reduce using rule 76 (one_eff_formula_lst -> one_eff_formula one_eff_formula_lst .)
    NAME            reduce using rule 76 (one_eff_formula_lst -> one_eff_formula one_eff_formula_lst .)
    EQUALS          reduce using rule 76 (one_eff_formula_lst -> one_eff_formula one_eff_formula_lst .)
    RPAREN          reduce using rule 76 (one_eff_formula_lst -> one_eff_formula one_eff_formula_lst .)


state 215

    (78) atomic_eff_lst -> atomic_eff atomic_eff_lst .

    RPAREN          reduce using rule 78 (atomic_eff_lst -> atomic_eff atomic_eff_lst .)
    AND_KEY         reduce using rule 78 (atomic_eff_lst -> atomic_eff atomic_eff_lst .)
    ONEOF_KEY       reduce using rule 78 (atomic_eff_lst -> atomic_eff atomic_eff_lst .)
    WHEN_KEY        reduce using rule 78 (atomic_eff_lst -> atomic_eff atomic_eff_lst .)
    LPAREN          reduce using rule 78 (atomic_eff_lst -> atomic_eff atomic_eff_lst .)
    NAME            reduce using rule 78 (atomic_eff_lst -> atomic_eff atomic_eff_lst .)
    EQUALS          reduce using rule 78 (atomic_eff_lst -> atomic_eff atomic_eff_lst .)


state 216

    (81) atomic_eff -> AND_KEY literal_lst .

    AND_KEY         reduce using rule 81 (atomic_eff -> AND_KEY literal_lst .)
    LPAREN          reduce using rule 81 (atomic_eff -> AND_KEY literal_lst .)
    NAME            reduce using rule 81 (atomic_eff -> AND_KEY literal_lst .)
    EQUALS          reduce using rule 81 (atomic_eff -> AND_KEY literal_lst .)
    RPAREN          reduce using rule 81 (atomic_eff -> AND_KEY literal_lst .)
    ONEOF_KEY       reduce using rule 81 (atomic_eff -> AND_KEY literal_lst .)
    WHEN_KEY        reduce using rule 81 (atomic_eff -> AND_KEY literal_lst .)


state 217

    (85) literal_lst -> literal . literal_lst
    (86) literal_lst -> literal .
    (85) literal_lst -> . literal literal_lst
    (86) literal_lst -> . literal
    (87) literal -> . LPAREN NOT_KEY predicate RPAREN
    (88) literal -> . predicate
    (89) predicate -> . LPAREN NAME variables_lst RPAREN
    (90) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (91) predicate -> . LPAREN NAME RPAREN
    (92) predicate -> . NAME variables_lst
    (93) predicate -> . EQUALS VARIABLE VARIABLE
    (94) predicate -> . NAME

  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
    AND_KEY         reduce using rule 86 (literal_lst -> literal .)
    RPAREN          reduce using rule 86 (literal_lst -> literal .)
    ONEOF_KEY       reduce using rule 86 (literal_lst -> literal .)
    WHEN_KEY        reduce using rule 86 (literal_lst -> literal .)
    LPAREN          shift and go to state 150
    NAME            shift and go to state 134
    EQUALS          shift and go to state 135

  ! LPAREN          [ reduce using rule 86 (literal_lst -> literal .) ]
  ! NAME            [ reduce using rule 86 (literal_lst -> literal .) ]
  ! EQUALS          [ reduce using rule 86 (literal_lst -> literal .) ]

    literal                        shift and go to state 217
    literal_lst                    shift and go to state 237
    predicate                      shift and go to state 133

state 218

    (82) atomic_eff -> LPAREN AND_KEY . RPAREN
    (83) atomic_eff -> LPAREN AND_KEY . literal_lst RPAREN
    (85) literal_lst -> . literal literal_lst
    (86) literal_lst -> . literal
    (87) literal -> . LPAREN NOT_KEY predicate RPAREN
    (88) literal -> . predicate
    (89) predicate -> . LPAREN NAME variables_lst RPAREN
    (90) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (91) predicate -> . LPAREN NAME RPAREN
    (92) predicate -> . NAME variables_lst
    (93) predicate -> . EQUALS VARIABLE VARIABLE
    (94) predicate -> . NAME

    RPAREN          shift and go to state 238
    LPAREN          shift and go to state 150
    NAME            shift and go to state 134
    EQUALS          shift and go to state 135

    literal_lst                    shift and go to state 239
    literal                        shift and go to state 217
    predicate                      shift and go to state 133

state 219

    (84) atomic_eff -> LPAREN WHEN_KEY . formula atomic_eff RPAREN
    (50) formula -> . literal
    (51) formula -> . AND_KEY formula_lst
    (52) formula -> . OR_KEY formula_lst
    (53) formula -> . NOT_KEY formula
    (54) formula -> . IMPLY_KEY formula formula
    (55) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (56) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (57) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (58) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (59) formula -> . LPAREN NOT_KEY formula RPAREN
    (60) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (61) formula -> . LPAREN literal RPAREN
    (62) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (63) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (87) literal -> . LPAREN NOT_KEY predicate RPAREN
    (88) literal -> . predicate
    (89) predicate -> . LPAREN NAME variables_lst RPAREN
    (90) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (91) predicate -> . LPAREN NAME RPAREN
    (92) predicate -> . NAME variables_lst
    (93) predicate -> . EQUALS VARIABLE VARIABLE
    (94) predicate -> . NAME

    AND_KEY         shift and go to state 127
    OR_KEY          shift and go to state 128
    NOT_KEY         shift and go to state 129
    IMPLY_KEY       shift and go to state 130
    EXISTS_KEY      shift and go to state 131
    FORALL_KEY      shift and go to state 132
    LPAREN          shift and go to state 124
    NAME            shift and go to state 134
    EQUALS          shift and go to state 135

    formula                        shift and go to state 240
    literal                        shift and go to state 126
    predicate                      shift and go to state 133

state 220

    (71) one_eff_formula -> WHEN_KEY formula atomic_eff .

    RPAREN          reduce using rule 71 (one_eff_formula -> WHEN_KEY formula atomic_eff .)
    AND_KEY         reduce using rule 71 (one_eff_formula -> WHEN_KEY formula atomic_eff .)
    ONEOF_KEY       reduce using rule 71 (one_eff_formula -> WHEN_KEY formula atomic_eff .)
    WHEN_KEY        reduce using rule 71 (one_eff_formula -> WHEN_KEY formula atomic_eff .)
    LPAREN          reduce using rule 71 (one_eff_formula -> WHEN_KEY formula atomic_eff .)
    NAME            reduce using rule 71 (one_eff_formula -> WHEN_KEY formula atomic_eff .)
    EQUALS          reduce using rule 71 (one_eff_formula -> WHEN_KEY formula atomic_eff .)


state 221

    (57) formula -> LPAREN AND_KEY formula_lst RPAREN .

    RPAREN          reduce using rule 57 (formula -> LPAREN AND_KEY formula_lst RPAREN .)
    AND_KEY         reduce using rule 57 (formula -> LPAREN AND_KEY formula_lst RPAREN .)
    OR_KEY          reduce using rule 57 (formula -> LPAREN AND_KEY formula_lst RPAREN .)
    NOT_KEY         reduce using rule 57 (formula -> LPAREN AND_KEY formula_lst RPAREN .)
    IMPLY_KEY       reduce using rule 57 (formula -> LPAREN AND_KEY formula_lst RPAREN .)
    EXISTS_KEY      reduce using rule 57 (formula -> LPAREN AND_KEY formula_lst RPAREN .)
    FORALL_KEY      reduce using rule 57 (formula -> LPAREN AND_KEY formula_lst RPAREN .)
    LPAREN          reduce using rule 57 (formula -> LPAREN AND_KEY formula_lst RPAREN .)
    NAME            reduce using rule 57 (formula -> LPAREN AND_KEY formula_lst RPAREN .)
    EQUALS          reduce using rule 57 (formula -> LPAREN AND_KEY formula_lst RPAREN .)


state 222

    (58) formula -> LPAREN OR_KEY formula_lst RPAREN .

    RPAREN          reduce using rule 58 (formula -> LPAREN OR_KEY formula_lst RPAREN .)
    AND_KEY         reduce using rule 58 (formula -> LPAREN OR_KEY formula_lst RPAREN .)
    OR_KEY          reduce using rule 58 (formula -> LPAREN OR_KEY formula_lst RPAREN .)
    NOT_KEY         reduce using rule 58 (formula -> LPAREN OR_KEY formula_lst RPAREN .)
    IMPLY_KEY       reduce using rule 58 (formula -> LPAREN OR_KEY formula_lst RPAREN .)
    EXISTS_KEY      reduce using rule 58 (formula -> LPAREN OR_KEY formula_lst RPAREN .)
    FORALL_KEY      reduce using rule 58 (formula -> LPAREN OR_KEY formula_lst RPAREN .)
    LPAREN          reduce using rule 58 (formula -> LPAREN OR_KEY formula_lst RPAREN .)
    NAME            reduce using rule 58 (formula -> LPAREN OR_KEY formula_lst RPAREN .)
    EQUALS          reduce using rule 58 (formula -> LPAREN OR_KEY formula_lst RPAREN .)


state 223

    (59) formula -> LPAREN NOT_KEY formula RPAREN .

    RPAREN          reduce using rule 59 (formula -> LPAREN NOT_KEY formula RPAREN .)
    AND_KEY         reduce using rule 59 (formula -> LPAREN NOT_KEY formula RPAREN .)
    OR_KEY          reduce using rule 59 (formula -> LPAREN NOT_KEY formula RPAREN .)
    NOT_KEY         reduce using rule 59 (formula -> LPAREN NOT_KEY formula RPAREN .)
    IMPLY_KEY       reduce using rule 59 (formula -> LPAREN NOT_KEY formula RPAREN .)
    EXISTS_KEY      reduce using rule 59 (formula -> LPAREN NOT_KEY formula RPAREN .)
    FORALL_KEY      reduce using rule 59 (formula -> LPAREN NOT_KEY formula RPAREN .)
    LPAREN          reduce using rule 59 (formula -> LPAREN NOT_KEY formula RPAREN .)
    NAME            reduce using rule 59 (formula -> LPAREN NOT_KEY formula RPAREN .)
    EQUALS          reduce using rule 59 (formula -> LPAREN NOT_KEY formula RPAREN .)


state 224

    (87) literal -> LPAREN NOT_KEY predicate RPAREN .

    RPAREN          reduce using rule 87 (literal -> LPAREN NOT_KEY predicate RPAREN .)
    AND_KEY         reduce using rule 87 (literal -> LPAREN NOT_KEY predicate RPAREN .)
    OR_KEY          reduce using rule 87 (literal -> LPAREN NOT_KEY predicate RPAREN .)
    NOT_KEY         reduce using rule 87 (literal -> LPAREN NOT_KEY predicate RPAREN .)
    IMPLY_KEY       reduce using rule 87 (literal -> LPAREN NOT_KEY predicate RPAREN .)
    EXISTS_KEY      reduce using rule 87 (literal -> LPAREN NOT_KEY predicate RPAREN .)
    FORALL_KEY      reduce using rule 87 (literal -> LPAREN NOT_KEY predicate RPAREN .)
    LPAREN          reduce using rule 87 (literal -> LPAREN NOT_KEY predicate RPAREN .)
    NAME            reduce using rule 87 (literal -> LPAREN NOT_KEY predicate RPAREN .)
    EQUALS          reduce using rule 87 (literal -> LPAREN NOT_KEY predicate RPAREN .)
    ONEOF_KEY       reduce using rule 87 (literal -> LPAREN NOT_KEY predicate RPAREN .)
    WHEN_KEY        reduce using rule 87 (literal -> LPAREN NOT_KEY predicate RPAREN .)


state 225

    (60) formula -> LPAREN IMPLY_KEY formula formula . RPAREN

    RPAREN          shift and go to state 241


state 226

    (62) formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst . RPAREN formula RPAREN

    RPAREN          shift and go to state 242


state 227

    (63) formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst . RPAREN formula RPAREN

    RPAREN          shift and go to state 243


state 228

    (89) predicate -> LPAREN NAME variables_lst RPAREN .

    RPAREN          reduce using rule 89 (predicate -> LPAREN NAME variables_lst RPAREN .)
    AND_KEY         reduce using rule 89 (predicate -> LPAREN NAME variables_lst RPAREN .)
    OR_KEY          reduce using rule 89 (predicate -> LPAREN NAME variables_lst RPAREN .)
    NOT_KEY         reduce using rule 89 (predicate -> LPAREN NAME variables_lst RPAREN .)
    IMPLY_KEY       reduce using rule 89 (predicate -> LPAREN NAME variables_lst RPAREN .)
    EXISTS_KEY      reduce using rule 89 (predicate -> LPAREN NAME variables_lst RPAREN .)
    FORALL_KEY      reduce using rule 89 (predicate -> LPAREN NAME variables_lst RPAREN .)
    LPAREN          reduce using rule 89 (predicate -> LPAREN NAME variables_lst RPAREN .)
    NAME            reduce using rule 89 (predicate -> LPAREN NAME variables_lst RPAREN .)
    EQUALS          reduce using rule 89 (predicate -> LPAREN NAME variables_lst RPAREN .)
    ONEOF_KEY       reduce using rule 89 (predicate -> LPAREN NAME variables_lst RPAREN .)
    WHEN_KEY        reduce using rule 89 (predicate -> LPAREN NAME variables_lst RPAREN .)


state 229

    (90) predicate -> LPAREN EQUALS VARIABLE VARIABLE . RPAREN
    (93) predicate -> EQUALS VARIABLE VARIABLE .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 244

  ! RPAREN          [ reduce using rule 93 (predicate -> EQUALS VARIABLE VARIABLE .) ]


state 230

    (55) formula -> EXISTS_KEY LPAREN typed_variables_lst RPAREN . formula
    (50) formula -> . literal
    (51) formula -> . AND_KEY formula_lst
    (52) formula -> . OR_KEY formula_lst
    (53) formula -> . NOT_KEY formula
    (54) formula -> . IMPLY_KEY formula formula
    (55) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (56) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (57) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (58) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (59) formula -> . LPAREN NOT_KEY formula RPAREN
    (60) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (61) formula -> . LPAREN literal RPAREN
    (62) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (63) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (87) literal -> . LPAREN NOT_KEY predicate RPAREN
    (88) literal -> . predicate
    (89) predicate -> . LPAREN NAME variables_lst RPAREN
    (90) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (91) predicate -> . LPAREN NAME RPAREN
    (92) predicate -> . NAME variables_lst
    (93) predicate -> . EQUALS VARIABLE VARIABLE
    (94) predicate -> . NAME

    AND_KEY         shift and go to state 127
    OR_KEY          shift and go to state 128
    NOT_KEY         shift and go to state 129
    IMPLY_KEY       shift and go to state 130
    EXISTS_KEY      shift and go to state 131
    FORALL_KEY      shift and go to state 132
    LPAREN          shift and go to state 124
    NAME            shift and go to state 134
    EQUALS          shift and go to state 135

    formula                        shift and go to state 245
    literal                        shift and go to state 126
    predicate                      shift and go to state 133

state 231

    (56) formula -> FORALL_KEY LPAREN typed_variables_lst RPAREN . formula
    (50) formula -> . literal
    (51) formula -> . AND_KEY formula_lst
    (52) formula -> . OR_KEY formula_lst
    (53) formula -> . NOT_KEY formula
    (54) formula -> . IMPLY_KEY formula formula
    (55) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (56) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (57) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (58) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (59) formula -> . LPAREN NOT_KEY formula RPAREN
    (60) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (61) formula -> . LPAREN literal RPAREN
    (62) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (63) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (87) literal -> . LPAREN NOT_KEY predicate RPAREN
    (88) literal -> . predicate
    (89) predicate -> . LPAREN NAME variables_lst RPAREN
    (90) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (91) predicate -> . LPAREN NAME RPAREN
    (92) predicate -> . NAME variables_lst
    (93) predicate -> . EQUALS VARIABLE VARIABLE
    (94) predicate -> . NAME

    AND_KEY         shift and go to state 127
    OR_KEY          shift and go to state 128
    NOT_KEY         shift and go to state 129
    IMPLY_KEY       shift and go to state 130
    EXISTS_KEY      shift and go to state 131
    FORALL_KEY      shift and go to state 132
    LPAREN          shift and go to state 124
    NAME            shift and go to state 134
    EQUALS          shift and go to state 135

    formula                        shift and go to state 246
    literal                        shift and go to state 126
    predicate                      shift and go to state 133

state 232

    (15) goal_def -> LPAREN GOAL_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN .

    RPAREN          reduce using rule 15 (goal_def -> LPAREN GOAL_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN .)


state 233

    (72) one_eff_formula -> LPAREN ONEOF_KEY atomic_eff_lst RPAREN .

    RPAREN          reduce using rule 72 (one_eff_formula -> LPAREN ONEOF_KEY atomic_eff_lst RPAREN .)
    AND_KEY         reduce using rule 72 (one_eff_formula -> LPAREN ONEOF_KEY atomic_eff_lst RPAREN .)
    ONEOF_KEY       reduce using rule 72 (one_eff_formula -> LPAREN ONEOF_KEY atomic_eff_lst RPAREN .)
    WHEN_KEY        reduce using rule 72 (one_eff_formula -> LPAREN ONEOF_KEY atomic_eff_lst RPAREN .)
    LPAREN          reduce using rule 72 (one_eff_formula -> LPAREN ONEOF_KEY atomic_eff_lst RPAREN .)
    NAME            reduce using rule 72 (one_eff_formula -> LPAREN ONEOF_KEY atomic_eff_lst RPAREN .)
    EQUALS          reduce using rule 72 (one_eff_formula -> LPAREN ONEOF_KEY atomic_eff_lst RPAREN .)


state 234

    (73) one_eff_formula -> LPAREN WHEN_KEY formula atomic_eff . RPAREN

    RPAREN          shift and go to state 247


state 235

    (74) one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst . RPAREN atomic_eff RPAREN
    (75) one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst . RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN

    RPAREN          shift and go to state 248


state 236

    (90) predicate -> LPAREN EQUALS VARIABLE VARIABLE . RPAREN

    RPAREN          shift and go to state 244


state 237

    (85) literal_lst -> literal literal_lst .

    AND_KEY         reduce using rule 85 (literal_lst -> literal literal_lst .)
    LPAREN          reduce using rule 85 (literal_lst -> literal literal_lst .)
    NAME            reduce using rule 85 (literal_lst -> literal literal_lst .)
    EQUALS          reduce using rule 85 (literal_lst -> literal literal_lst .)
    RPAREN          reduce using rule 85 (literal_lst -> literal literal_lst .)
    ONEOF_KEY       reduce using rule 85 (literal_lst -> literal literal_lst .)
    WHEN_KEY        reduce using rule 85 (literal_lst -> literal literal_lst .)


state 238

    (82) atomic_eff -> LPAREN AND_KEY RPAREN .

    AND_KEY         reduce using rule 82 (atomic_eff -> LPAREN AND_KEY RPAREN .)
    LPAREN          reduce using rule 82 (atomic_eff -> LPAREN AND_KEY RPAREN .)
    NAME            reduce using rule 82 (atomic_eff -> LPAREN AND_KEY RPAREN .)
    EQUALS          reduce using rule 82 (atomic_eff -> LPAREN AND_KEY RPAREN .)
    RPAREN          reduce using rule 82 (atomic_eff -> LPAREN AND_KEY RPAREN .)
    ONEOF_KEY       reduce using rule 82 (atomic_eff -> LPAREN AND_KEY RPAREN .)
    WHEN_KEY        reduce using rule 82 (atomic_eff -> LPAREN AND_KEY RPAREN .)


state 239

    (83) atomic_eff -> LPAREN AND_KEY literal_lst . RPAREN

    RPAREN          shift and go to state 249


state 240

    (84) atomic_eff -> LPAREN WHEN_KEY formula . atomic_eff RPAREN
    (80) atomic_eff -> . literal
    (81) atomic_eff -> . AND_KEY literal_lst
    (82) atomic_eff -> . LPAREN AND_KEY RPAREN
    (83) atomic_eff -> . LPAREN AND_KEY literal_lst RPAREN
    (84) atomic_eff -> . LPAREN WHEN_KEY formula atomic_eff RPAREN
    (87) literal -> . LPAREN NOT_KEY predicate RPAREN
    (88) literal -> . predicate
    (89) predicate -> . LPAREN NAME variables_lst RPAREN
    (90) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (91) predicate -> . LPAREN NAME RPAREN
    (92) predicate -> . NAME variables_lst
    (93) predicate -> . EQUALS VARIABLE VARIABLE
    (94) predicate -> . NAME

    AND_KEY         shift and go to state 185
    LPAREN          shift and go to state 186
    NAME            shift and go to state 134
    EQUALS          shift and go to state 135

    atomic_eff                     shift and go to state 250
    literal                        shift and go to state 184
    predicate                      shift and go to state 133

state 241

    (60) formula -> LPAREN IMPLY_KEY formula formula RPAREN .

    RPAREN          reduce using rule 60 (formula -> LPAREN IMPLY_KEY formula formula RPAREN .)
    AND_KEY         reduce using rule 60 (formula -> LPAREN IMPLY_KEY formula formula RPAREN .)
    OR_KEY          reduce using rule 60 (formula -> LPAREN IMPLY_KEY formula formula RPAREN .)
    NOT_KEY         reduce using rule 60 (formula -> LPAREN IMPLY_KEY formula formula RPAREN .)
    IMPLY_KEY       reduce using rule 60 (formula -> LPAREN IMPLY_KEY formula formula RPAREN .)
    EXISTS_KEY      reduce using rule 60 (formula -> LPAREN IMPLY_KEY formula formula RPAREN .)
    FORALL_KEY      reduce using rule 60 (formula -> LPAREN IMPLY_KEY formula formula RPAREN .)
    LPAREN          reduce using rule 60 (formula -> LPAREN IMPLY_KEY formula formula RPAREN .)
    NAME            reduce using rule 60 (formula -> LPAREN IMPLY_KEY formula formula RPAREN .)
    EQUALS          reduce using rule 60 (formula -> LPAREN IMPLY_KEY formula formula RPAREN .)


state 242

    (62) formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN . formula RPAREN
    (50) formula -> . literal
    (51) formula -> . AND_KEY formula_lst
    (52) formula -> . OR_KEY formula_lst
    (53) formula -> . NOT_KEY formula
    (54) formula -> . IMPLY_KEY formula formula
    (55) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (56) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (57) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (58) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (59) formula -> . LPAREN NOT_KEY formula RPAREN
    (60) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (61) formula -> . LPAREN literal RPAREN
    (62) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (63) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (87) literal -> . LPAREN NOT_KEY predicate RPAREN
    (88) literal -> . predicate
    (89) predicate -> . LPAREN NAME variables_lst RPAREN
    (90) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (91) predicate -> . LPAREN NAME RPAREN
    (92) predicate -> . NAME variables_lst
    (93) predicate -> . EQUALS VARIABLE VARIABLE
    (94) predicate -> . NAME

    AND_KEY         shift and go to state 127
    OR_KEY          shift and go to state 128
    NOT_KEY         shift and go to state 129
    IMPLY_KEY       shift and go to state 130
    EXISTS_KEY      shift and go to state 131
    FORALL_KEY      shift and go to state 132
    LPAREN          shift and go to state 124
    NAME            shift and go to state 134
    EQUALS          shift and go to state 135

    formula                        shift and go to state 251
    literal                        shift and go to state 126
    predicate                      shift and go to state 133

state 243

    (63) formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN . formula RPAREN
    (50) formula -> . literal
    (51) formula -> . AND_KEY formula_lst
    (52) formula -> . OR_KEY formula_lst
    (53) formula -> . NOT_KEY formula
    (54) formula -> . IMPLY_KEY formula formula
    (55) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (56) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (57) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (58) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (59) formula -> . LPAREN NOT_KEY formula RPAREN
    (60) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (61) formula -> . LPAREN literal RPAREN
    (62) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (63) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (87) literal -> . LPAREN NOT_KEY predicate RPAREN
    (88) literal -> . predicate
    (89) predicate -> . LPAREN NAME variables_lst RPAREN
    (90) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (91) predicate -> . LPAREN NAME RPAREN
    (92) predicate -> . NAME variables_lst
    (93) predicate -> . EQUALS VARIABLE VARIABLE
    (94) predicate -> . NAME

    AND_KEY         shift and go to state 127
    OR_KEY          shift and go to state 128
    NOT_KEY         shift and go to state 129
    IMPLY_KEY       shift and go to state 130
    EXISTS_KEY      shift and go to state 131
    FORALL_KEY      shift and go to state 132
    LPAREN          shift and go to state 124
    NAME            shift and go to state 134
    EQUALS          shift and go to state 135

    formula                        shift and go to state 252
    literal                        shift and go to state 126
    predicate                      shift and go to state 133

state 244

    (90) predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .

    RPAREN          reduce using rule 90 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)
    AND_KEY         reduce using rule 90 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)
    OR_KEY          reduce using rule 90 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)
    NOT_KEY         reduce using rule 90 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)
    IMPLY_KEY       reduce using rule 90 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)
    EXISTS_KEY      reduce using rule 90 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)
    FORALL_KEY      reduce using rule 90 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)
    LPAREN          reduce using rule 90 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)
    NAME            reduce using rule 90 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)
    EQUALS          reduce using rule 90 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)
    ONEOF_KEY       reduce using rule 90 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)
    WHEN_KEY        reduce using rule 90 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)


state 245

    (55) formula -> EXISTS_KEY LPAREN typed_variables_lst RPAREN formula .

    RPAREN          reduce using rule 55 (formula -> EXISTS_KEY LPAREN typed_variables_lst RPAREN formula .)
    AND_KEY         reduce using rule 55 (formula -> EXISTS_KEY LPAREN typed_variables_lst RPAREN formula .)
    OR_KEY          reduce using rule 55 (formula -> EXISTS_KEY LPAREN typed_variables_lst RPAREN formula .)
    NOT_KEY         reduce using rule 55 (formula -> EXISTS_KEY LPAREN typed_variables_lst RPAREN formula .)
    IMPLY_KEY       reduce using rule 55 (formula -> EXISTS_KEY LPAREN typed_variables_lst RPAREN formula .)
    EXISTS_KEY      reduce using rule 55 (formula -> EXISTS_KEY LPAREN typed_variables_lst RPAREN formula .)
    FORALL_KEY      reduce using rule 55 (formula -> EXISTS_KEY LPAREN typed_variables_lst RPAREN formula .)
    LPAREN          reduce using rule 55 (formula -> EXISTS_KEY LPAREN typed_variables_lst RPAREN formula .)
    NAME            reduce using rule 55 (formula -> EXISTS_KEY LPAREN typed_variables_lst RPAREN formula .)
    EQUALS          reduce using rule 55 (formula -> EXISTS_KEY LPAREN typed_variables_lst RPAREN formula .)


state 246

    (56) formula -> FORALL_KEY LPAREN typed_variables_lst RPAREN formula .

    RPAREN          reduce using rule 56 (formula -> FORALL_KEY LPAREN typed_variables_lst RPAREN formula .)
    AND_KEY         reduce using rule 56 (formula -> FORALL_KEY LPAREN typed_variables_lst RPAREN formula .)
    OR_KEY          reduce using rule 56 (formula -> FORALL_KEY LPAREN typed_variables_lst RPAREN formula .)
    NOT_KEY         reduce using rule 56 (formula -> FORALL_KEY LPAREN typed_variables_lst RPAREN formula .)
    IMPLY_KEY       reduce using rule 56 (formula -> FORALL_KEY LPAREN typed_variables_lst RPAREN formula .)
    EXISTS_KEY      reduce using rule 56 (formula -> FORALL_KEY LPAREN typed_variables_lst RPAREN formula .)
    FORALL_KEY      reduce using rule 56 (formula -> FORALL_KEY LPAREN typed_variables_lst RPAREN formula .)
    LPAREN          reduce using rule 56 (formula -> FORALL_KEY LPAREN typed_variables_lst RPAREN formula .)
    NAME            reduce using rule 56 (formula -> FORALL_KEY LPAREN typed_variables_lst RPAREN formula .)
    EQUALS          reduce using rule 56 (formula -> FORALL_KEY LPAREN typed_variables_lst RPAREN formula .)


state 247

    (73) one_eff_formula -> LPAREN WHEN_KEY formula atomic_eff RPAREN .

    RPAREN          reduce using rule 73 (one_eff_formula -> LPAREN WHEN_KEY formula atomic_eff RPAREN .)
    AND_KEY         reduce using rule 73 (one_eff_formula -> LPAREN WHEN_KEY formula atomic_eff RPAREN .)
    ONEOF_KEY       reduce using rule 73 (one_eff_formula -> LPAREN WHEN_KEY formula atomic_eff RPAREN .)
    WHEN_KEY        reduce using rule 73 (one_eff_formula -> LPAREN WHEN_KEY formula atomic_eff RPAREN .)
    LPAREN          reduce using rule 73 (one_eff_formula -> LPAREN WHEN_KEY formula atomic_eff RPAREN .)
    NAME            reduce using rule 73 (one_eff_formula -> LPAREN WHEN_KEY formula atomic_eff RPAREN .)
    EQUALS          reduce using rule 73 (one_eff_formula -> LPAREN WHEN_KEY formula atomic_eff RPAREN .)


state 248

    (74) one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN . atomic_eff RPAREN
    (75) one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN . LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN
    (80) atomic_eff -> . literal
    (81) atomic_eff -> . AND_KEY literal_lst
    (82) atomic_eff -> . LPAREN AND_KEY RPAREN
    (83) atomic_eff -> . LPAREN AND_KEY literal_lst RPAREN
    (84) atomic_eff -> . LPAREN WHEN_KEY formula atomic_eff RPAREN
    (87) literal -> . LPAREN NOT_KEY predicate RPAREN
    (88) literal -> . predicate
    (89) predicate -> . LPAREN NAME variables_lst RPAREN
    (90) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (91) predicate -> . LPAREN NAME RPAREN
    (92) predicate -> . NAME variables_lst
    (93) predicate -> . EQUALS VARIABLE VARIABLE
    (94) predicate -> . NAME

    LPAREN          shift and go to state 253
    AND_KEY         shift and go to state 185
    NAME            shift and go to state 134
    EQUALS          shift and go to state 135

    atomic_eff                     shift and go to state 254
    literal                        shift and go to state 184
    predicate                      shift and go to state 133

state 249

    (83) atomic_eff -> LPAREN AND_KEY literal_lst RPAREN .

    AND_KEY         reduce using rule 83 (atomic_eff -> LPAREN AND_KEY literal_lst RPAREN .)
    LPAREN          reduce using rule 83 (atomic_eff -> LPAREN AND_KEY literal_lst RPAREN .)
    NAME            reduce using rule 83 (atomic_eff -> LPAREN AND_KEY literal_lst RPAREN .)
    EQUALS          reduce using rule 83 (atomic_eff -> LPAREN AND_KEY literal_lst RPAREN .)
    RPAREN          reduce using rule 83 (atomic_eff -> LPAREN AND_KEY literal_lst RPAREN .)
    ONEOF_KEY       reduce using rule 83 (atomic_eff -> LPAREN AND_KEY literal_lst RPAREN .)
    WHEN_KEY        reduce using rule 83 (atomic_eff -> LPAREN AND_KEY literal_lst RPAREN .)


state 250

    (84) atomic_eff -> LPAREN WHEN_KEY formula atomic_eff . RPAREN

    RPAREN          shift and go to state 255


state 251

    (62) formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula . RPAREN

    RPAREN          shift and go to state 256


state 252

    (63) formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula . RPAREN

    RPAREN          shift and go to state 257


state 253

    (75) one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN . WHEN_KEY formula atomic_eff RPAREN RPAREN
    (82) atomic_eff -> LPAREN . AND_KEY RPAREN
    (83) atomic_eff -> LPAREN . AND_KEY literal_lst RPAREN
    (84) atomic_eff -> LPAREN . WHEN_KEY formula atomic_eff RPAREN
    (87) literal -> LPAREN . NOT_KEY predicate RPAREN
    (89) predicate -> LPAREN . NAME variables_lst RPAREN
    (90) predicate -> LPAREN . EQUALS VARIABLE VARIABLE RPAREN
    (91) predicate -> LPAREN . NAME RPAREN

    WHEN_KEY        shift and go to state 258
    AND_KEY         shift and go to state 218
    NOT_KEY         shift and go to state 176
    NAME            shift and go to state 177
    EQUALS          shift and go to state 178


state 254

    (74) one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN atomic_eff . RPAREN

    RPAREN          shift and go to state 259


state 255

    (84) atomic_eff -> LPAREN WHEN_KEY formula atomic_eff RPAREN .

    AND_KEY         reduce using rule 84 (atomic_eff -> LPAREN WHEN_KEY formula atomic_eff RPAREN .)
    LPAREN          reduce using rule 84 (atomic_eff -> LPAREN WHEN_KEY formula atomic_eff RPAREN .)
    NAME            reduce using rule 84 (atomic_eff -> LPAREN WHEN_KEY formula atomic_eff RPAREN .)
    EQUALS          reduce using rule 84 (atomic_eff -> LPAREN WHEN_KEY formula atomic_eff RPAREN .)
    RPAREN          reduce using rule 84 (atomic_eff -> LPAREN WHEN_KEY formula atomic_eff RPAREN .)
    ONEOF_KEY       reduce using rule 84 (atomic_eff -> LPAREN WHEN_KEY formula atomic_eff RPAREN .)
    WHEN_KEY        reduce using rule 84 (atomic_eff -> LPAREN WHEN_KEY formula atomic_eff RPAREN .)


state 256

    (62) formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .

    RPAREN          reduce using rule 62 (formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    AND_KEY         reduce using rule 62 (formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    OR_KEY          reduce using rule 62 (formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    NOT_KEY         reduce using rule 62 (formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    IMPLY_KEY       reduce using rule 62 (formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    EXISTS_KEY      reduce using rule 62 (formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    FORALL_KEY      reduce using rule 62 (formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    LPAREN          reduce using rule 62 (formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    NAME            reduce using rule 62 (formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    EQUALS          reduce using rule 62 (formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)


state 257

    (63) formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .

    RPAREN          reduce using rule 63 (formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    AND_KEY         reduce using rule 63 (formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    OR_KEY          reduce using rule 63 (formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    NOT_KEY         reduce using rule 63 (formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    IMPLY_KEY       reduce using rule 63 (formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    EXISTS_KEY      reduce using rule 63 (formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    FORALL_KEY      reduce using rule 63 (formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    LPAREN          reduce using rule 63 (formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    NAME            reduce using rule 63 (formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    EQUALS          reduce using rule 63 (formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)


state 258

    (75) one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY . formula atomic_eff RPAREN RPAREN
    (84) atomic_eff -> LPAREN WHEN_KEY . formula atomic_eff RPAREN
    (50) formula -> . literal
    (51) formula -> . AND_KEY formula_lst
    (52) formula -> . OR_KEY formula_lst
    (53) formula -> . NOT_KEY formula
    (54) formula -> . IMPLY_KEY formula formula
    (55) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (56) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (57) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (58) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (59) formula -> . LPAREN NOT_KEY formula RPAREN
    (60) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (61) formula -> . LPAREN literal RPAREN
    (62) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (63) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (87) literal -> . LPAREN NOT_KEY predicate RPAREN
    (88) literal -> . predicate
    (89) predicate -> . LPAREN NAME variables_lst RPAREN
    (90) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (91) predicate -> . LPAREN NAME RPAREN
    (92) predicate -> . NAME variables_lst
    (93) predicate -> . EQUALS VARIABLE VARIABLE
    (94) predicate -> . NAME

    AND_KEY         shift and go to state 127
    OR_KEY          shift and go to state 128
    NOT_KEY         shift and go to state 129
    IMPLY_KEY       shift and go to state 130
    EXISTS_KEY      shift and go to state 131
    FORALL_KEY      shift and go to state 132
    LPAREN          shift and go to state 124
    NAME            shift and go to state 134
    EQUALS          shift and go to state 135

    formula                        shift and go to state 260
    literal                        shift and go to state 126
    predicate                      shift and go to state 133

state 259

    (74) one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN atomic_eff RPAREN .

    RPAREN          reduce using rule 74 (one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN atomic_eff RPAREN .)
    AND_KEY         reduce using rule 74 (one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN atomic_eff RPAREN .)
    ONEOF_KEY       reduce using rule 74 (one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN atomic_eff RPAREN .)
    WHEN_KEY        reduce using rule 74 (one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN atomic_eff RPAREN .)
    LPAREN          reduce using rule 74 (one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN atomic_eff RPAREN .)
    NAME            reduce using rule 74 (one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN atomic_eff RPAREN .)
    EQUALS          reduce using rule 74 (one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN atomic_eff RPAREN .)


state 260

    (75) one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula . atomic_eff RPAREN RPAREN
    (84) atomic_eff -> LPAREN WHEN_KEY formula . atomic_eff RPAREN
    (80) atomic_eff -> . literal
    (81) atomic_eff -> . AND_KEY literal_lst
    (82) atomic_eff -> . LPAREN AND_KEY RPAREN
    (83) atomic_eff -> . LPAREN AND_KEY literal_lst RPAREN
    (84) atomic_eff -> . LPAREN WHEN_KEY formula atomic_eff RPAREN
    (87) literal -> . LPAREN NOT_KEY predicate RPAREN
    (88) literal -> . predicate
    (89) predicate -> . LPAREN NAME variables_lst RPAREN
    (90) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (91) predicate -> . LPAREN NAME RPAREN
    (92) predicate -> . NAME variables_lst
    (93) predicate -> . EQUALS VARIABLE VARIABLE
    (94) predicate -> . NAME

    AND_KEY         shift and go to state 185
    LPAREN          shift and go to state 186
    NAME            shift and go to state 134
    EQUALS          shift and go to state 135

    atomic_eff                     shift and go to state 261
    literal                        shift and go to state 184
    predicate                      shift and go to state 133

state 261

    (75) one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff . RPAREN RPAREN
    (84) atomic_eff -> LPAREN WHEN_KEY formula atomic_eff . RPAREN

    RPAREN          shift and go to state 262


state 262

    (75) one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN . RPAREN
    (84) atomic_eff -> LPAREN WHEN_KEY formula atomic_eff RPAREN .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 263

  ! RPAREN          [ reduce using rule 84 (atomic_eff -> LPAREN WHEN_KEY formula atomic_eff RPAREN .) ]


state 263

    (75) one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN .

    RPAREN          reduce using rule 75 (one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN .)
    AND_KEY         reduce using rule 75 (one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN .)
    ONEOF_KEY       reduce using rule 75 (one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN .)
    WHEN_KEY        reduce using rule 75 (one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN .)
    LPAREN          reduce using rule 75 (one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN .)
    NAME            reduce using rule 75 (one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN .)
    EQUALS          reduce using rule 75 (one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for NAME in state 90 resolved as shift
WARNING: shift/reduce conflict for AND_KEY in state 147 resolved as shift
WARNING: shift/reduce conflict for ONEOF_KEY in state 147 resolved as shift
WARNING: shift/reduce conflict for WHEN_KEY in state 147 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 147 resolved as shift
WARNING: shift/reduce conflict for NAME in state 147 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 147 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 158 resolved as shift
WARNING: shift/reduce conflict for AND_KEY in state 162 resolved as shift
WARNING: shift/reduce conflict for OR_KEY in state 162 resolved as shift
WARNING: shift/reduce conflict for NOT_KEY in state 162 resolved as shift
WARNING: shift/reduce conflict for IMPLY_KEY in state 162 resolved as shift
WARNING: shift/reduce conflict for EXISTS_KEY in state 162 resolved as shift
WARNING: shift/reduce conflict for FORALL_KEY in state 162 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 162 resolved as shift
WARNING: shift/reduce conflict for NAME in state 162 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 162 resolved as shift
WARNING: shift/reduce conflict for AND_KEY in state 181 resolved as shift
WARNING: shift/reduce conflict for ONEOF_KEY in state 181 resolved as shift
WARNING: shift/reduce conflict for WHEN_KEY in state 181 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 181 resolved as shift
WARNING: shift/reduce conflict for NAME in state 181 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 181 resolved as shift
WARNING: shift/reduce conflict for AND_KEY in state 183 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 183 resolved as shift
WARNING: shift/reduce conflict for NAME in state 183 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 183 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 192 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 197 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 217 resolved as shift
WARNING: shift/reduce conflict for NAME in state 217 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 217 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 229 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 262 resolved as shift
